{"version":3,"sources":["fastclick.js","activeLinks.js","capture.js","nobounce.js","outerClick.js","sharedState.js","mobile-angular-ui.core.js","overthrow-detect.js","overthrow-init.js","overthrow-polyfill.js","modals.js","navbars.js","scrollable.js","sidebars.js","switch.js","mobile-angular-ui.components.js","mobile-angular-ui.js"],"names":["FastClick","layer","options","bind","method","context","apply","arguments","oldOnClick","this","trackingClick","trackingClickStart","targetElement","touchStartX","touchStartY","lastTouchIdentifier","touchBoundary","tapDelay","notNeeded","methods","i","l","length","deviceIsAndroid","addEventListener","onMouse","onClick","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","Event","prototype","stopImmediatePropagation","removeEventListener","type","callback","capture","rmv","Node","call","hijacked","adv","event","propagationStopped","onclick","navigator","userAgent","indexOf","deviceIsIOS","test","deviceIsIOS4","deviceIsIOSWithBadTarget","deviceIsBlackBerry10","needsClick","target","nodeName","toLowerCase","disabled","className","needsFocus","readOnly","sendClick","clickEvent","touch","document","activeElement","blur","changedTouches","createEvent","initMouseEvent","determineEventType","window","screenX","screenY","clientX","clientY","forwardedTouchEvent","dispatchEvent","tagName","focus","setSelectionRange","value","updateScrollParent","scrollParent","parentElement","fastClickScrollParent","contains","scrollHeight","offsetHeight","fastClickLastScrollTop","scrollTop","getTargetElementFromEventTarget","eventTarget","nodeType","TEXT_NODE","parentNode","selection","targetTouches","getSelection","rangeCount","isCollapsed","identifier","preventDefault","timeStamp","pageX","pageY","lastClickTime","touchHasMoved","boundary","Math","abs","findControl","labelElement","undefined","control","htmlFor","getElementById","querySelector","forElement","targetTagName","cancelNextClick","elementFromPoint","pageXOffset","pageYOffset","top","cancelable","stopPropagation","permitted","detail","destroy","metaViewport","chromeVersion","blackberryVersion","ontouchstart","exec","content","documentElement","scrollWidth","outerWidth","match","style","msTouchAction","attach","define","amd","module","exports","angular","run","$rootScope","$window","$document","$location","setupActiveLinks","newPath","url","firstHash","firstSearchMark","locationHref","location","href","plainUrlLength","slice","domLinks","links","domLink","link","element","addClass","removeClass","$on","Capture","resetAll","factory","$compile","yielders","name","hasOwnProperty","resetYielder","b","setContentFor","defaultContent","defaultScope","putYielder","yielder","getYielder","removeYielder","scope","html","contents","directive","compile","tElem","tAttrs","rawContent","uiDuplicate","remove","elem","attrs","uiContentFor","attr","uiYieldTo","on","body","forEach","directiveName","restrict","e","allowTouchmoveDefault","fnTrue","$element","condition","allowTouchmoveDefaultCallback","off","noop","isAncestorOrSelf","parent","$timeout","outerClickFn","outerClickIf","handleOuterClick","$apply","$event","stopWatching","t","$watch","cancel","unbind","bindOuterClick","$parse","uiOuterClick","uiOuterClickIf","values","statusesMeta","scopes","exclusionGroups","initialize","id","isNewScope","defaultValue","exclusionGroup","$id","push","references","extend","$broadcast","setOne","ids","status","Object","keys","prev","console","warn","setMany","map","set","idOrMap","isObject","isUndefined","turnOn","eg","egStatuses","item","turnOff","toggle","get","isActive","active","has","referenceCount","equals","eq","uiBindEvent","eventNames","fn","SharedState","priority","uiState","defaultValueExpr","uiDefault","$eval","uiExclusionGroup","methodName","toUpperCase","arg","uiTriggers","parseScopeContext","vars","trim","split","res","Error","mixScopeContext","scopeVars","key","alias","parseUiCondition","$scope","exprFn","uiScopeContext","$animate","getBlockNodes","nodes","node","endNode","blockNodes","nextSibling","multiElement","transclude","terminal","$$tlb","$attr","ctrl","$transclude","block","childScope","previousElements","uiIfFn","clone","newScope","createComment","uiIf","enter","$destroy","done","nga","leave","then","NG_HIDE_CLASS","NG_HIDE_IN_PROGRESS_CLASS","uiHideFn","tempClasses","uiShowFn","uiClassFn","classesToAdd","classesToRemove","expr","Ui","w","doc","docElem","enabledClassName","canBeFilledWithPoly","nativeOverflow","screen","width","ua","webkit","wkversion","wkLte534","RegExp","$1","blackberry","parseFloat","overthrow","replace","forget","support","o","scrollIndicatorClassName","configure","closest","ascend","enabled","start","lastDown","lastRight","inputs","lastTops","lastLefts","resetVertTracking","resetHorTracking","setPointers","val","querySelectorAll","il","pointerEvents","changeScrollTarget","startEvent","tEnd","newTarget","touchchild","initEvent","intercept","touches","touchStartE","scrollT","scrollL","scrollLeft","height","offsetWidth","startY","startX","move","ty","tx","down","right","unshift","pop","end","setTimeout","$rootElement","hasClass","side","charAt","controller","scrollableContent","scrollable","allowUp","allowDown","prevTop","prevBot","lastY","setupTouchstart","clientHeight","up","scrollTo","elementOrNumber","marginTop","isNumber","offsetParent","offsetTop","require","h1","h2","uiScrollTop","uiScrollBottom","reached","Top","Bottom","el","parentStyle","adjustParentPadding","styles","getComputedStyle","margin","parseInt","marginBottom","interval","setInterval","clearInterval","stateName","parentClass","visibleClass","activeClass","outerClickCb","defaultActive","uiTrackAsSearchParam","search","closeOnOuterClicks","model","changeExpr","template","$parent"],"mappings":"AAoBA,QAAAA,WAAAC,EAAAC,GACA,YAgFA,SAAAC,GAAAC,EAAAC,GACA,MAAA,YAAA,MAAAD,GAAAE,MAAAD,EAAAE,YAhFA,GAAAC,EA0EA,IAxEAN,EAAAA,MAOAO,KAAAC,eAAA,EAQAD,KAAAE,mBAAA,EAQAF,KAAAG,cAAA,KAQAH,KAAAI,YAAA,EAQAJ,KAAAK,YAAA,EAQAL,KAAAM,oBAAA,EAQAN,KAAAO,cAAAd,EAAAc,eAAA,GAQAP,KAAAR,MAAAA,EAOAQ,KAAAQ,SAAAf,EAAAe,UAAA,KAEAjB,UAAAkB,UAAAjB,GAAA,CAYA,IAAA,GAFAkB,IAAA,UAAA,UAAA,eAAA,cAAA,aAAA,iBACAd,EAAAI,KACAW,EAAA,EAAAC,EAAAF,EAAAG,OAAAD,EAAAD,EAAAA,IACAf,EAAAc,EAAAC,IAAAjB,EAAAE,EAAAc,EAAAC,IAAAf,EAIAkB,mBACAtB,EAAAuB,iBAAA,YAAAf,KAAAgB,SAAA,GACAxB,EAAAuB,iBAAA,YAAAf,KAAAgB,SAAA,GACAxB,EAAAuB,iBAAA,UAAAf,KAAAgB,SAAA,IAGAxB,EAAAuB,iBAAA,QAAAf,KAAAiB,SAAA,GACAzB,EAAAuB,iBAAA,aAAAf,KAAAkB,cAAA,GACA1B,EAAAuB,iBAAA,YAAAf,KAAAmB,aAAA,GACA3B,EAAAuB,iBAAA,WAAAf,KAAAoB,YAAA,GACA5B,EAAAuB,iBAAA,cAAAf,KAAAqB,eAAA,GAKAC,MAAAC,UAAAC,2BACAhC,EAAAiC,oBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,KAAAP,UAAAE,mBACA,WAAAC,EACAG,EAAAE,KAAAvC,EAAAkC,EAAAC,EAAAK,UAAAL,EAAAC,GAEAC,EAAAE,KAAAvC,EAAAkC,EAAAC,EAAAC,IAIApC,EAAAuB,iBAAA,SAAAW,EAAAC,EAAAC,GACA,GAAAK,GAAAH,KAAAP,UAAAR,gBACA,WAAAW,EACAO,EAAAF,KAAAvC,EAAAkC,EAAAC,EAAAK,WAAAL,EAAAK,SAAA,SAAAE,GACAA,EAAAC,oBACAR,EAAAO,KAEAN,GAEAK,EAAAF,KAAAvC,EAAAkC,EAAAC,EAAAC,KAQA,kBAAApC,GAAA4C,UAIArC,EAAAP,EAAA4C,QACA5C,EAAAuB,iBAAA,QAAA,SAAAmB,GACAnC,EAAAmC,KACA,GACA1C,EAAA4C,QAAA,OAUA,GAAAtB,iBAAAuB,UAAAC,UAAAC,QAAA,WAAA,EAQAC,YAAA,iBAAAC,KAAAJ,UAAAC,WAQAI,aAAAF,aAAA,gBAAAC,KAAAJ,UAAAC,WAQAK,yBAAAH,aAAA,sBAAAC,KAAAJ,UAAAC,WAOAM,qBAAAP,UAAAC,UAAAC,QAAA,QAAA,CAQAhD,WAAAgC,UAAAsB,WAAA,SAAAC,GACA,YACA,QAAAA,EAAAC,SAAAC,eAGA,IAAA,SACA,IAAA,SACA,IAAA,WACA,GAAAF,EAAAG,SACA,OAAA,CAGA,MACA,KAAA,QAGA,GAAAT,aAAA,SAAAM,EAAApB,MAAAoB,EAAAG,SACA,OAAA,CAGA,MACA,KAAA,QACA,IAAA,QACA,OAAA,EAGA,MAAA,iBAAAR,KAAAK,EAAAI,YAUA3D,UAAAgC,UAAA4B,WAAA,SAAAL,GACA,YACA,QAAAA,EAAAC,SAAAC,eACA,IAAA,WACA,OAAA,CACA,KAAA,SACA,OAAAlC,eACA,KAAA,QACA,OAAAgC,EAAApB,MACA,IAAA,SACA,IAAA,WACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,OAAA,EAIA,OAAAoB,EAAAG,WAAAH,EAAAM,QACA,SACA,MAAA,iBAAAX,KAAAK,EAAAI,aAWA3D,UAAAgC,UAAA8B,UAAA,SAAAlD,EAAA+B,GACA,YACA,IAAAoB,GAAAC,CAGAC,UAAAC,eAAAD,SAAAC,gBAAAtD,GACAqD,SAAAC,cAAAC,OAGAH,EAAArB,EAAAyB,eAAA,GAGAL,EAAAE,SAAAI,YAAA,eACAN,EAAAO,eAAA7D,KAAA8D,mBAAA3D,IAAA,GAAA,EAAA4D,OAAA,EAAAR,EAAAS,QAAAT,EAAAU,QAAAV,EAAAW,QAAAX,EAAAY,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MACAb,EAAAc,qBAAA,EACAjE,EAAAkE,cAAAf,IAGA/D,UAAAgC,UAAAuC,mBAAA,SAAA3D,GACA,YAGA,OAAAW,kBAAA,WAAAX,EAAAmE,QAAAtB,cACA,YAGA,SAOAzD,UAAAgC,UAAAgD,MAAA,SAAApE,GACA,YACA,IAAAU,EAGA2B,cAAArC,EAAAqE,mBAAA,IAAArE,EAAAuB,KAAAa,QAAA,SAAA,SAAApC,EAAAuB,MACAb,EAAAV,EAAAsE,MAAA5D,OACAV,EAAAqE,kBAAA3D,EAAAA,IAEAV,EAAAoE,SAUAhF,UAAAgC,UAAAmD,mBAAA,SAAAvE,GACA,YACA,IAAAwE,GAAAC,CAMA,IAJAD,EAAAxE,EAAA0E,uBAIAF,IAAAA,EAAAG,SAAA3E,GAAA,CACAyE,EAAAzE,CACA,GAAA,CACA,GAAAyE,EAAAG,aAAAH,EAAAI,aAAA,CACAL,EAAAC,EACAzE,EAAA0E,sBAAAD,CACA,OAGAA,EAAAA,EAAAA,oBACAA,GAIAD,IACAA,EAAAM,uBAAAN,EAAAO,YASA3F,UAAAgC,UAAA4D,gCAAA,SAAAC,GACA,YAGA,OAAAA,GAAAC,WAAAvD,KAAAwD,UACAF,EAAAG,WAGAH,GAUA7F,UAAAgC,UAAAL,aAAA,SAAAgB,GACA,YACA,IAAA/B,GAAAoD,EAAAiC,CAGA,IAAAtD,EAAAuD,cAAA5E,OAAA,EACA,OAAA,CAMA,IAHAV,EAAAH,KAAAmF,gCAAAjD,EAAAY,QACAS,EAAArB,EAAAuD,cAAA,GAEAjD,YAAA,CAIA,GADAgD,EAAAzB,OAAA2B,eACAF,EAAAG,aAAAH,EAAAI,YACA,OAAA,CAGA,KAAAlD,aAAA,CAUA,GAAAa,EAAAsC,YAAAtC,EAAAsC,aAAA7F,KAAAM,oBAEA,MADA4B,GAAA4D,kBACA,CAGA9F,MAAAM,oBAAAiD,EAAAsC,WAQA7F,KAAA0E,mBAAAvE,IAgBA,MAZAH,MAAAC,eAAA,EACAD,KAAAE,mBAAAgC,EAAA6D,UACA/F,KAAAG,cAAAA,EAEAH,KAAAI,YAAAmD,EAAAyC,MACAhG,KAAAK,YAAAkD,EAAA0C,MAGA/D,EAAA6D,UAAA/F,KAAAkG,cAAAlG,KAAAQ,UACA0B,EAAA4D,kBAGA,GAUAvG,UAAAgC,UAAA4E,cAAA,SAAAjE,GACA,YACA,IAAAqB,GAAArB,EAAAyB,eAAA,GAAAyC,EAAApG,KAAAO,aAEA,OAAA8F,MAAAC,IAAA/C,EAAAyC,MAAAhG,KAAAI,aAAAgG,GAAAC,KAAAC,IAAA/C,EAAA0C,MAAAjG,KAAAK,aAAA+F,GACA,GAGA,GAUA7G,UAAAgC,UAAAJ,YAAA,SAAAe,GACA,YACA,OAAAlC,MAAAC,gBAKAD,KAAAG,gBAAAH,KAAAmF,gCAAAjD,EAAAY,SAAA9C,KAAAmG,cAAAjE,MACAlC,KAAAC,eAAA,EACAD,KAAAG,cAAA,OAGA,IATA,GAmBAZ,UAAAgC,UAAAgF,YAAA,SAAAC,GACA,YAGA,OAAAC,UAAAD,EAAAE,QACAF,EAAAE,QAIAF,EAAAG,QACAnD,SAAAoD,eAAAJ,EAAAG,SAKAH,EAAAK,cAAA,wFAUAtH,UAAAgC,UAAAH,WAAA,SAAAc,GACA,YACA,IAAA4E,GAAA5G,EAAA6G,EAAApC,EAAApB,EAAApD,EAAAH,KAAAG,aAEA,KAAAH,KAAAC,cACA,OAAA,CAIA,IAAAiC,EAAA6D,UAAA/F,KAAAkG,cAAAlG,KAAAQ,SAEA,MADAR,MAAAgH,iBAAA,GACA,CAyBA,IArBAhH,KAAAgH,iBAAA,EAEAhH,KAAAkG,cAAAhE,EAAA6D,UAEA7F,EAAAF,KAAAE,mBACAF,KAAAC,eAAA,EACAD,KAAAE,mBAAA,EAMAyC,2BACAY,EAAArB,EAAAyB,eAAA,GAGAxD,EAAAqD,SAAAyD,iBAAA1D,EAAAyC,MAAAjC,OAAAmD,YAAA3D,EAAA0C,MAAAlC,OAAAoD,cAAAhH,EACAA,EAAA0E,sBAAA7E,KAAAG,cAAA0E,uBAGAkC,EAAA5G,EAAAmE,QAAAtB,cACA,UAAA+D,GAEA,GADAD,EAAA9G,KAAAuG,YAAApG,GACA,CAEA,GADAH,KAAAuE,MAAApE,GACAW,gBACA,OAAA,CAGAX,GAAA2G,OAEA,IAAA9G,KAAAmD,WAAAhD,GAIA,MAAA+B,GAAA6D,UAAA7F,EAAA,KAAAsC,aAAAuB,OAAAqD,MAAArD,QAAA,UAAAgD,GACA/G,KAAAG,cAAA,MACA,IAGAH,KAAAuE,MAAApE,GACAH,KAAAqD,UAAAlD,EAAA+B,GAIAM,aAAA,WAAAuE,IACA/G,KAAAG,cAAA,KACA+B,EAAA4D,mBAGA,EAGA,OAAAtD,eAAAE,eAIAiC,EAAAxE,EAAA0E,sBACAF,GAAAA,EAAAM,yBAAAN,EAAAO,YACA,GAMAlF,KAAA6C,WAAA1C,KACA+B,EAAA4D,iBACA9F,KAAAqD,UAAAlD,EAAA+B,KAGA,IASA3C,UAAAgC,UAAAF,cAAA,WACA,YACArB,MAAAC,eAAA,EACAD,KAAAG,cAAA,MAUAZ,UAAAgC,UAAAP,QAAA,SAAAkB,GACA,YAGA,OAAAlC,MAAAG,cAIA+B,EAAAkC,qBACA,EAIAlC,EAAAmF,cAOArH,KAAA6C,WAAA7C,KAAAG,gBAAAH,KAAAgH,kBAGA9E,EAAAV,yBACAU,EAAAV,2BAIAU,EAAAC,oBAAA,EAIAD,EAAAoF,kBACApF,EAAA4D,kBAEA,IArBA,GATA,GA8CAvG,UAAAgC,UAAAN,QAAA,SAAAiB,GACA,YACA,IAAAqF,EAGA,OAAAvH,MAAAC,eACAD,KAAAG,cAAA,KACAH,KAAAC,eAAA,GACA,GAIA,WAAAiC,EAAAY,OAAApB,MAAA,IAAAQ,EAAAsF,QACA,GAGAD,EAAAvH,KAAAgB,QAAAkB,GAGAqF,IACAvH,KAAAG,cAAA,MAIAoH,IASAhI,UAAAgC,UAAAkG,QAAA,WACA,YACA,IAAAjI,GAAAQ,KAAAR,KAEAsB,mBACAtB,EAAAiC,oBAAA,YAAAzB,KAAAgB,SAAA,GACAxB,EAAAiC,oBAAA,YAAAzB,KAAAgB,SAAA,GACAxB,EAAAiC,oBAAA,UAAAzB,KAAAgB,SAAA,IAGAxB,EAAAiC,oBAAA,QAAAzB,KAAAiB,SAAA,GACAzB,EAAAiC,oBAAA,aAAAzB,KAAAkB,cAAA,GACA1B,EAAAiC,oBAAA,YAAAzB,KAAAmB,aAAA,GACA3B,EAAAiC,oBAAA,WAAAzB,KAAAoB,YAAA,GACA5B,EAAAiC,oBAAA,cAAAzB,KAAAqB,eAAA,IASA9B,UAAAkB,UAAA,SAAAjB,GACA,YACA,IAAAkI,GACAC,EACAC,CAGA,IAAA,mBAAA7D,QAAA8D,aACA,OAAA,CAMA,IAFAF,IAAA,mBAAAG,KAAAzF,UAAAC,aAAA,CAAA,IAAA,GAEA,CAEA,IAAAxB,gBAgBA,OAAA,CAbA,IAFA4G,EAAAlE,SAAAqD,cAAA,uBAEA,CAEA,GAAA,KAAAa,EAAAK,QAAAxF,QAAA,oBACA,OAAA,CAGA,IAAAoF,EAAA,IAAAnE,SAAAwE,gBAAAC,aAAAlE,OAAAmE,WACA,OAAA,GAUA,GAAAtF,uBACAgF,EAAAvF,UAAAC,UAAA6F,MAAA,+BAIAP,EAAA,IAAA,IAAAA,EAAA,IAAA,IACAF,EAAAlE,SAAAqD,cAAA,yBAEA,CAEA,GAAA,KAAAa,EAAAK,QAAAxF,QAAA,oBACA,OAAA,CAGA,IAAAiB,SAAAwE,gBAAAC,aAAAlE,OAAAmE,WACA,OAAA,EAOA,MAAA,SAAA1I,EAAA4I,MAAAC,eACA,GAGA,GAUA9I,UAAA+I,OAAA,SAAA9I,EAAAC,GACA,YACA,OAAA,IAAAF,WAAAC,EAAAC,IAIA,kBAAA8I,SAAA,gBAAAA,QAAAC,KAAAD,OAAAC,IAGAD,OAAA,WACA,YACA,OAAAhJ,aAEA,mBAAAkJ,SAAAA,OAAAC,SACAD,OAAAC,QAAAnJ,UAAA+I,OACAG,OAAAC,QAAAnJ,UAAAA,WAEAwE,OAAAxE,UAAAA,UC1xBA,WACA,YAEAoJ,SAAAF,OAAA,yCAEAG,KACA,aACA,UACA,YACA,YACA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAA,WAGA,GAKAC,GALAC,EAAAH,EAAAG,MACAC,EAAAD,EAAA5G,QAAA,KACA8G,EAAAF,EAAA5G,QAAA,KACA+G,EAAAR,EAAAS,SAAAC,KACAC,EAAAH,EAAA/G,QAAA4G,EAGA,MAAAC,GAAA,KAAAC,EACAH,EAAAI,EACA,KAAAF,GAAAA,EAAAC,EACAH,EAAAI,EAAAI,MAAA,EAAAD,EAAAL,GACA,KAAAC,GAAAA,EAAAD,IACAF,EAAAI,EAAAI,MAAA,EAAAD,EAAAJ,GAIA,KAAA,GADAM,GAAAZ,EAAA,GAAAa,MACAjJ,EAAA,EAAAA,EAAAgJ,EAAA9I,OAAAF,IAAA,CACA,GAAAkJ,GAAAF,EAAAhJ,GACAmJ,EAAAnB,QAAAoB,QAAAF,EAEAA,GAAAL,OAAAN,EACAY,EAAAE,SAAA,UACAH,EAAAL,MAAAK,EAAAL,KAAA3I,QACAiJ,EAAAG,YAAA,WAKApB,GAAAqB,IAAA,yBAAAjB,GACAJ,EAAAqB,IAAA,wBAAAjB,SCyCA,WACA,YAEAN,SAAAF,OAAA,qCAEAG,KACA,UACA,aACA,SAAAuB,EAAAtB,GACAA,EAAAqB,IAAA,oBAAA,WACAC,EAAAC,gBAKAC,QAAA,WACA,WACA,SAAAC,GACA,GAAAC,KAEA,QACAH,SAAA,WACA,IAAA,GAAAI,KAAAD,GACAA,EAAAE,eAAAD,IACAxK,KAAA0K,aAAAF,IAKAE,aAAA,SAAAF,GACA,GAAAG,GAAAJ,EAAAC,EACAxK,MAAA4K,cAAAJ,EAAAG,EAAAE,eAAAF,EAAAG,eAGAC,WAAA,SAAAP,EAAAT,EAAAe,EAAAD,GACA,GAAAG,KACAA,GAAAR,KAAAA,EACAQ,EAAAjB,QAAAA,EACAiB,EAAAH,eAAAA,GAAA,GACAG,EAAAF,aAAAA,EACAP,EAAAC,GAAAQ,GAGAC,WAAA,SAAAT,GACA,MAAAD,GAAAC,IAGAU,cAAA,SAAAV,SACAD,GAAAC,IAGAI,cAAA,SAAAJ,EAAAzC,EAAAoD,GACA,GAAAR,GAAAJ,EAAAC,EACAG,KAGAA,EAAAZ,QAAAqB,KAAArD,GACAuC,EAAAK,EAAAZ,QAAAsB,YAAAF,SAsBAG,UAAA,gBACA,UACA,SAAAnB,GACA,OACAoB,QAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAJ,MAMA,QALA,OAAAK,EAAAE,aAAAlF,SAAAgF,EAAAE,eAEAH,EAAAJ,KAAA,IACAI,EAAAI,UAEA,SAAAT,EAAAU,EAAAC,GACA3B,EAAAS,cAAAkB,EAAAC,aAAAL,EAAAP,SAkBAG,UAAA,aACA,WAAA,UAAA,SAAAhB,EAAAH,GACA,OACAL,KAAA,SAAAqB,EAAApB,EAAAiC,GACA7B,EAAAY,WAAAiB,EAAAC,UAAAlC,EAAAoB,EAAApB,EAAAqB,QAEArB,EAAAmC,GAAA,WAAA,WACA/B,EAAAe,cAAAc,EAAAC,aAGAd,EAAAjB,IAAA,WAAA,WACAC,EAAAe,cAAAc,EAAAC,qBFtOA,WACA,YACA,IAAAxD,GAAAE,QAAAF,OAAA,sCAEAA,GAAAG,IAAA,WACA,oBAAApF,WACAA,SAAAzC,iBAAA,mBAAA,WACAxB,UAAA+I,OAAA9E,SAAA2I,QACA,KAIAxD,QAAAyD,SAAA,SAAA,QAAA,YAAA,SAAAC,GACA5D,EAAA6C,UAAAe,EAAA,WACA,OACAC,SAAA,IACAf,QAAA,SAAAM,GACAA,EAAA7B,SAAA,uBGAA,WACA,YACA,IAAAvB,GAAAE,QAAAF,OAAA,qCAEA,gBAAAjF,WACAiF,EAAAG,IAAA,WACAD,QAAAoB,QAAAvG,UAAA0I,GAAA,YAAA,SAAAK,GACAA,EAAAC,yBAAA,GACAD,EAAAzG,qBAgCA2C,EAAA4B,QAAA,wBAAA,WACA,GAAAoC,GAAA,WAAA,OAAA,EAEA,OAAA,eAAAjJ,UACA,SAAAkJ,EAAAC,GACAA,EAAAA,GAAAF,CAEA,IAAAG,GAAA,SAAAL,GACAI,EAAAJ,KAAAA,EAAAC,uBAAA,GAWA,OARAE,GAAA/D,QAAAoB,QAAA2C,GACAA,EAAAR,GAAA,YAAAU,GAEAF,EAAAR,GAAA,WAAA,WACAQ,EAAAG,IAAA,YAAAD,GACAF,EAAA,OAGA,WACAA,GACAA,EAAAG,IAAA,YAAAD,KAKAjE,QAAAmE,UC1BA,WACA,YAEA,IAAAC,GAAA,SAAAhD,EAAAjH,GAEA,IADA,GAAAkK,GAAAjD,EACAiD,EAAAnM,OAAA,GAAA,CACA,GAAAmM,EAAA,KAAAlK,EAAA,GAEA,MADAkK,GAAA,MACA,CAEAA,GAAAA,EAAAA,SAGA,MADAA,GAAA,MACA,EAGArE,SAAAF,OAAA,wCA8BA4B,QAAA,kBACA,YACA,WACA,SAAAtB,EAAAkE,GAEA,MAAA,UAAA9B,EAAApB,EAAAmD,EAAAC,GACA,GAAAC,GAAA,SAAAlL,GACA6K,EAAApE,QAAAoB,QAAA7H,EAAAY,QAAAiH,IACAoB,EAAAkC,OAAA,WACAH,EAAA/B,GAAAmC,OAAApL,OAKAqL,EAAA5E,QAAAmE,KACAU,EAAA,IAEAL,GACAI,EAAApC,EAAAsC,OAAAN,EAAA,SAAA1I,GACAwI,EAAAS,OAAAF,GAEA/I,EAGA+I,EAAAP,EAAA,WACAlE,EAAAmD,GAAA,YAAAkB,IACA,GAGArE,EAAA4E,OAAA,YAAAP,MAIAH,EAAAS,OAAAF,GACAzE,EAAAmD,GAAA,YAAAkB,IAGAjC,EAAAjB,IAAA,WAAA,WACAqD,IACAxE,EAAA4E,OAAA,YAAAP,SAgBA9B,UAAA,gBACA,iBACA,SACA,SAAAsC,EAAAC,GACA,OACAvB,SAAA,IACAf,QAAA,SAAAM,EAAAC,GACA,GAAAoB,GAAAW,EAAA/B,EAAAgC,cACAX,EAAArB,EAAAiC,cACA,OAAA,UAAA5C,EAAAU,GACA+B,EAAAzC,EAAAU,EAAAqB,EAAAC,YCxKA,WACA,YAmHA,IAAA1E,GAAAE,QAAAF,OAAA,wCAsFAA,GAAA4B,QAAA,eACA,aACA,SAAAxB,GACA,GAAAmF,MACAC,KACAC,KACAC,IAEA,QAkBAC,WAAA,SAAAjD,EAAAkD,EAAA5O,GACAA,EAAAA,KAEA,IAAA6O,GAAA7H,SAAAyH,EAAA/C,GACAoD,EAAA9O,EAAA8O,aACAC,EAAA/O,EAAA+O,cAEAN,GAAA/C,EAAAsD,KAAAP,EAAA/C,EAAAsD,SACAP,EAAA/C,EAAAsD,KAAAC,KAAAL,GAEAJ,EAAAI,GAkBAC,GAEAL,EAAAI,GAAAM,cAhBAV,EAAAI,GAAA1F,QAAAiG,UAAAnP,GAAAkP,WAAA,IAEA9F,EAAAgG,WAAA,uCAAAR,EAAAE,GAEA9H,SAAA8H,GACAvO,KAAA8O,OAAAT,EAAAE,GAGAC,IAEAL,EAAAK,GAAAL,EAAAK,OACAL,EAAAK,GAAAH,IAAA,IAOAlD,EAAAjB,IAAA,WAAA,WAEA,IAAA,GADA6E,GAAAb,EAAA/C,EAAAsD,SACA9N,EAAA,EAAAA,EAAAoO,EAAAlO,OAAAF,IAAA,CACA,GAAAqO,GAAAf,EAAAc,EAAApO,GAEAqO,GAAAR,uBACAL,GAAAa,EAAAR,gBAAAO,EAAApO,IACA,IAAAsO,OAAAC,KAAAf,EAAAa,EAAAR,iBAAA3N,cACAsN,GAAAa,EAAAR,iBAIAQ,EAAAL,aACAK,EAAAL,YAAA,UACAV,GAAAc,EAAApO,UACAqN,GAAAe,EAAApO,IACAkI,EAAAgG,WAAA,qCAAAR,UAGAH,GAAA/C,EAAAsD,QAcAK,OAAA,SAAAT,EAAA5J,GACA,GAAAgC,SAAAwH,EAAAI,GAAA,CACA,GAAAc,GAAAnB,EAAAK,EAKA,OAJAL,GAAAK,GAAA5J,EACA0K,IAAA1K,GACAoE,EAAAgG,WAAA,mCAAAR,EAAA5J,EAAA0K,GAEA1K,EAGA2K,SACAA,QAAAC,KAAA,sDAAAhB,IAmBAiB,QAAA,SAAAC,GACA5G,QAAAyD,QAAAmD,EAAA,SAAA9K,EAAA4J,GACArO,KAAA8O,OAAAT,EAAA5J,IACAzE,OAiBAwP,IAAA,SAAAC,EAAAhL,GACAkE,QAAA+G,SAAAD,IAAA9G,QAAAgH,YAAAlL,GACAzE,KAAAsP,QAAAG,GAEAzP,KAAA8O,OAAAW,EAAAhL,IAgBAmL,OAAA,SAAAvB,GAEA,GAAAwB,GAAA5B,EAAAI,IAAAJ,EAAAI,GAAAG,cACA,IAAAqB,EAEA,IAAA,GADAC,GAAAb,OAAAC,KAAAf,EAAA0B,IACAlP,EAAA,EAAAA,EAAAmP,EAAAjP,OAAAF,IAAA,CACA,GAAAoP,GAAAD,EAAAnP,EACAoP,KAAA1B,GACArO,KAAAgQ,QAAAD,GAIA,MAAA/P,MAAA8O,OAAAT,GAAA,IAYA2B,QAAA,SAAA3B,GACA,MAAArO,MAAA8O,OAAAT,GAAA,IAeA4B,OAAA,SAAA5B,GACA,MAAArO,MAAAkQ,IAAA7B,GAAArO,KAAAgQ,QAAA3B,GAAArO,KAAA4P,OAAAvB,IAaA6B,IAAA,SAAA7B,GACA,MAAAJ,GAAAI,IAAAL,EAAAK,IAaA8B,SAAA,SAAA9B,GACA,QAAArO,KAAAkQ,IAAA7B,IAcA+B,OAAA,SAAA/B,GACA,MAAArO,MAAAmQ,SAAA9B,IAaAsB,YAAA,SAAAtB,GACA,MAAA5H,UAAAwH,EAAAI,IAAA5H,SAAAzG,KAAAkQ,IAAA7B,IAYAgC,IAAA,SAAAhC,GACA,MAAA5H,UAAAwH,EAAAI,IAYAiC,eAAA,SAAAjC,GACA,GAAAW,GAAAf,EAAAI,EACA,OAAA5H,UAAAuI,EAAA,EAAAA,EAAAL,YAaA4B,OAAA,SAAAlC,EAAA5J,GACA,MAAAzE,MAAAkQ,IAAA7B,KAAA5J,GAeA+L,GAAA,SAAAnC,EAAA5J,GACA,MAAAzE,MAAAuQ,OAAAlC,EAAA5J,IAkBAuJ,OAAA,WACA,MAAAA,OAOA,IAAAyC,GAAA,SAAAtF,EAAApB,EAAA2G,EAAAC,GACAD,EAAAA,GAAA,YACA3G,EAAAmC,GAAAwE,EAAA,SAAAxO,GACAiJ,EAAAkC,OAAA,WACAsD,EAAAxF,GAAAmC,OAAApL,QAaAuG,GAAA6C,UAAA,WACA,cACA,SAAAsF,GACA,OACAtE,SAAA,KACAuE,SAAA,IACA/G,KAAA,SAAAqB,EAAAU,EAAAC,GACA,GAAAuC,GAAAvC,EAAAgF,SAAAhF,EAAAuC,GACA0C,EAAAjF,EAAAkF,WAAAlF,EAAA,WACAyC,EAAAwC,EAAA5F,EAAA8F,MAAAF,GAAAtK,MAEAmK,GAAAxC,WAAAjD,EAAAkD,GACAE,aAAAA,EACAC,eAAA1C,EAAAoF,wBAOAvI,QAAAyD,SAAA,SAAA,SAAA,UAAA,OACA,SAAA+E,GACA,GAAA9E,GAAA,KAAA8E,EAAA,GAAAC,cAAAD,EAAAzH,MAAA,EA+CAjB,GAAA6C,UAAAe,GACA,SACA,cACA,SAAAwB,EAAA+C,GACA,GAAAjR,GAAAiR,EAAAO,EACA,QACA7E,SAAA,IACAuE,SAAA,EAMAtF,QAAA,SAAAM,EAAAC,GACA,GAAA6E,GAAA,QAAAQ,EACAtD,EAAA/B,EAAAO,IACA,WACA,MAAAP,GAAAO,GAGA,OAAA,UAAAlB,EAAAU,EAAAC,GACA,GAAAnK,GAAA,WACA,GAAA0P,GAAAV,EAAAxF,EACA,OAAAxL,GAAAoC,KAAA6O,EAAAS,GAEAZ,GAAAtF,EAAAU,EAAAC,EAAAwF,WAAA3P,UAgDA,IAAA4P,GAAA,SAAAvF,GACA,IAAAA,GAAA,KAAAA,EACA,QAIA,KAAA,GAFAwF,GAAAxF,EAAAA,EAAAyF,OAAAC,MAAA,YACAC,KACAhR,EAAA,EAAAA,EAAA6Q,EAAA3Q,OAAAF,IAAA,CACA,GAAAoP,GAAAyB,EAAA7Q,GAAA+Q,MAAA,SACA,IAAA3B,EAAAlP,OAAA,GAAAkP,EAAAlP,OAAA,EACA,KAAA,IAAA+Q,OAAA,iCAAA5F,EAAA,IAEA2F,GAAAjD,KAAAqB,GAEA,MAAA4B,IAGAE,EAAA,SAAAjS,EAAAkS,EAAA3G,GACA,IAAA,GAAAxK,GAAA,EAAAA,EAAAmR,EAAAjR,OAAAF,IAAA,CACA,GAAAoR,GAAAD,EAAAnR,GAAA,GACAqR,EAAAF,EAAAnR,GAAA,IAAAoR,CACAnS,GAAAoS,GAAA7G,EAAA4G,KAIAE,EAAA,SAAAzH,EAAAsB,EAAAoG,EAAAtB,EAAA/C,GACA,GAAAsE,GAAAtE,EAAA/B,EAAAtB,IACA4H,EAAAb,EAAAzF,EAAAsG,eACA,OAAA,YACA,GAAAxS,EAOA,OANAwS,GAAAvR,QACAjB,EAAA+I,QAAAiG,UAAAgC,EAAA5C,UACA6D,EAAAjS,EAAAwS,EAAAF,IAEAtS,EAAAgR,EAAA5C,SAEAmE,EAAAvS,IAeA6I,GAAA6C,UAAA,QAAA,WAAA,cAAA,SAAA,SAAA+G,EAAAzB,EAAA/C,GACA,QAAAyE,GAAAC,GACA,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAAA,EAAA1R,OAAA,GACA6R,GAAAF,EACA,GAAA,CAEA,GADAA,EAAAA,EAAAG,aACAH,EAAA,KACAE,GAAAhE,KAAA8D,SACAA,IAAAC,EAEA,OAAA9J,SAAAoB,QAAA2I,GAGA,OACAE,cAAA,EACAC,WAAA,UACAhC,SAAA,IACAiC,UAAA,EACAxG,SAAA,IACAyG,OAAA,EACAjJ,KAAA,SAAAoI,EAAAxF,EAAAsG,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EACAC,EAAArB,EAAA,OAAAe,EAAAd,EAAAtB,EAAA/C,EAEAqE,GAAAzE,OAAA6F,EAAA,SAAA7O,GACA,GAAAA,EACA2O,GACAF,EAAA,SAAAK,EAAAC,GACAJ,EAAAI,EACAD,EAAAA,EAAA1S,UAAA2C,SAAAiQ,cAAA,cAAAT,EAAAU,KAAA,KAIAP,GACAI,MAAAA,GAEAlB,EAAAsB,MAAAJ,EAAA7G,EAAAM,SAAAN,SAYA,IARA2G,IACAA,EAAAzH,SACAyH,EAAA,MAEAD,IACAA,EAAAQ,WACAR,EAAA,MAEAD,EAAA,CACAE,EAAAf,EAAAa,EAAAI,MACA,IAAAM,GAAA,WACAR,EAAA,MAEAS,EAAAzB,EAAA0B,MAAAV,EAAAQ,EACAC,IACAA,EAAAE,KAAAH,GAEAV,EAAA,aAmBA1K,EAAA6C,UAAA,UAAA,WAAA,cAAA,SAAA,SAAA+G,EAAAzB,EAAA/C,GACA,GAAAoG,GAAA,UACAC,EAAA,iBAEA,QACA5H,SAAA,IACAsG,cAAA,EACA9I,KAAA,SAAAqB,EAAApB,EAAAiC,GACA,GAAAmI,GAAAlC,EAAA,SAAAjG,EAAAb,EAAAyF,EAAA/C,EACA1C,GAAAsC,OAAA0G,EAAA,SAAA1P,GACA4N,EAAA5N,EAAA,WAAA,eAAAsF,EAAAkK,GACAG,YAAAF,WAiBAzL,EAAA6C,UAAA,UAAA,WAAA,cAAA,SAAA,SAAA+G,EAAAzB,EAAA/C,GACA,GAAAoG,GAAA,UACAC,EAAA,iBAEA,QACA5H,SAAA,IACAsG,cAAA,EACA9I,KAAA,SAAAqB,EAAApB,EAAAiC,GACA,GAAAqI,GAAApC,EAAA,SAAAjG,EAAAb,EAAAyF,EAAA/C,EACA1C,GAAAsC,OAAA4G,EAAA,SAAA5P,GACA4N,EAAA5N,EAAA,cAAA,YAAAsF,EAAAkK,GACAG,YAAAF,WAiBAzL,EAAA6C,UAAA,WAAA,cAAA,SAAA,SAAAsF,EAAA/C,GACA,OACAvB,SAAA,IACAxC,KAAA,SAAAqB,EAAApB,EAAAiC,GACA,GAAAsI,GAAArC,EAAA,UAAAjG,EAAAb,EAAAyF,EAAA/C,EACA1C,GAAAsC,OAAA6G,EAAA,SAAA7P,GACA,GAAA8P,GAAA,GACAC,EAAA,EACA7L,SAAAyD,QAAA3H,EAAA,SAAAgQ,EAAAvR,GACAuR,EACAF,GAAA,IAAArR,EAGAsR,GAAA,IAAAtR,EAEAqR,EAAA1T,QACAkJ,EAAAC,SAAAuK,GAEAC,EAAA3T,QACAkJ,EAAAE,YAAAuK,OAGA,QAKA/L,EAAAG,KACA,aACA,cACA,SAAAC,EAAA+H,GACA/H,EAAA6L,GAAA9D,QCx3BA,WACA,YACAjI,SAAAF,OAAA,0BACA,mCACA,qCACA,iCACA,oCACA,qCACA,uCCpCA,SAAAkM,GAEA,GAAAC,GAAAD,EAAAnR,SACAqR,EAAAD,EAAA5M,gBACA8M,EAAA,oBAGAC,EAAA,eAAAH,GAIAI,EAEA,2BAAAH,GAAAzM,OAEA,mBAAAyM,GAAAzM,QAIA2M,GAAAJ,EAAAM,OAAAC,MAAA,KAIA,WACA,GAAAC,GAAAR,EAAAtS,UAAAC,UAEA8S,EAAAD,EAAAhN,MAAA,yBACAkN,EAAAD,GAAAA,EAAA,GACAE,EAAAF,GAAAC,GAAA,GAEA,OAGAF,GAAAhN,MAAA,qBAAAoN,OAAAC,IAAA,GAAAF,GAGAH,EAAAhN,MAAA,uBAAAoN,OAAAC,IAAA,GAAAb,EAAAc,YAAAH,GAGAH,EAAA5S,QAAA,YAAA,IAAA+S,GAAA,MAAAH,EAAA5S,QAAA,cAGA4S,EAAAhN,MAAA,sBAAAoN,OAAAC,IAAA,GAGAL,EAAAhN,MAAA,yBAAAoN,OAAAC,IAAA,KAAAF,GAIAH,EAAAhN,MAAA,6BAAA,MAAAuN,WAAAH,OAAAC,KAAAJ,GAAAC,GAAA,MAKAV,GAAAgB,aAEAhB,EAAAgB,UAAAb,iBAAAA,EAEAH,EAAAgB,UAAA3L,SAAA,WACA,KAAA6K,EAAA3R,UAAAX,QAAAoS,EAAAgB,UAAAb,oBACAD,EAAA3R,WAAA,IAAAyR,EAAAgB,UAAAb,mBAIAH,EAAAgB,UAAA1L,YAAA,WACA4K,EAAA3R,UAAA2R,EAAA3R,UAAA0S,QAAAjB,EAAAgB,UAAAb,iBAAA,KAIAH,EAAAgB,UAAAnG,IAAA,WAGAwF,GACAL,EAAAgB,UAAA3L,YAMA2K,EAAAgB,UAAAZ,oBAAAA,EAGAJ,EAAAgB,UAAAE,OAAA,WAEAlB,EAAAgB,UAAA1L,eAKA0K,EAAAgB,UAAAG,QAAAd,EAAA,SAAA,QAEAhV,MC3FA,SAAA2U,GAGAA,EAAAgB,UAAAnG,OAEAxP,MCLA,SAAA2U,EAAAoB,EAAAtP,GAGA,GAAAsP,IAAAtP,EAAA,CAIAsP,EAAAC,yBAAA,WAEA,IAAApB,GAAAD,EAAAnR,SACAqR,EAAAD,EAAA5M,gBAEAgN,EAAA,WAAAe,EAAAD,QACAf,EAAAgB,EAAAhB,oBAEAvF,GADAuG,EAAAE,UACAF,EAAAvG,KACAqG,EAAAE,EAAAF,OACAG,EAAAD,EAAAC,wBAGAD,GAAAG,QAAA,SAAApT,EAAAqT,GACA,OAAAA,GAAArT,EAAAI,WAAAJ,EAAAI,UAAAX,QAAAyT,GAAA,IAAAlT,GAAAiT,EAAAG,QAAApT,EAAAyC,YAIA,IAAA6Q,IAAA,CACAL,GAAAvG,IAAA,WAKA,GAHAA,KAGA4G,IAAApB,GAAAD,EAAA,CAIAJ,EAAAgB,UAAA3L,WAEAoM,GAAA,EAEAL,EAAAD,QAAA,aAEAC,EAAAF,OAAA,WACAA,IACAO,GAAA,EAEAxB,EAAAnT,qBACAmT,EAAAnT,oBAAA,aAAA4U,GAAA,GAOA,IAAAxK,GASAyK,EAGAC,EAiBAC,EA1BAC,KAGAC,KASAC,EAAA,WACAF,KACAH,EAAA,MAGAM,EAAA,WACAF,KACAH,EAAA,MAQAM,EAAA,SAAAC,GACAN,EAAA3K,EAAAkL,iBAAA,kBACA,KAAA,GAAApW,GAAA,EAAAqW,EAAAR,EAAA3V,OAAAmW,EAAArW,EAAAA,IACA6V,EAAA7V,GAAAyH,MAAA6O,cAAAH,GAKAI,EAAA,SAAAC,EAAAhB,GACA,GAAAvB,EAAAhR,YAAA,CACA,GACAwT,GADAC,IAAAlB,GAAAA,IAAA1P,IAAAoF,EAAAtG,YAAAsG,EAAAyL,YAAAzL,CAGAwL,KAAAxL,IACAuL,EAAAxC,EAAAhR,YAAA,cACAwT,EAAAG,UAAA,YAAA,GAAA,GACA1L,EAAAxH,cAAA+S,GACAC,EAAAC,WAAAzL,EACAA,EAAAwL,EACAA,EAAAhT,cAAA8S,MAQAd,EAAA,SAAA9J,GAaA,GAVAwJ,EAAAyB,WACAzB,EAAAyB,YAIAb,IACAC,IAEA/K,EAAAkK,EAAAG,QAAA3J,EAAAzJ,QAEA+I,GAAAA,IAAAgJ,KAAAtI,EAAAkL,QAAA5W,OAAA,GAAA,CAIAgW,EAAA,OACA,IAAAa,GAAAnL,EACAoL,EAAA9L,EAAA3G,UACA0S,EAAA/L,EAAAgM,WACAC,EAAAjM,EAAA7G,aACAkQ,EAAArJ,EAAAkM,YACAC,EAAAzL,EAAAkL,QAAA,GAAAxR,MACAgS,EAAA1L,EAAAkL,QAAA,GAAAzR,MACAjB,EAAA8G,EAAA9G,aACAkD,EAAA4D,EAAA5D,YAGAiQ,EAAA,SAAA3L,GAEA,GAAA4L,GAAAR,EAAAK,EAAAzL,EAAAkL,QAAA,GAAAxR,MACAmS,EAAAR,EAAAK,EAAA1L,EAAAkL,QAAA,GAAAzR,MACAqS,EAAAF,IAAA1B,EAAA5V,OAAA4V,EAAA,GAAA,GACA6B,EAAAF,IAAA1B,EAAA7V,OAAA6V,EAAA,GAAA,EAGAyB,GAAA,GAAApT,EAAA+S,EAAAK,GAAAC,EAAA,GAAAnQ,EAAAiN,EAAAkD,EACA7L,EAAAzG,iBAIAoR,EAAAQ,GAIApB,GAAA+B,IAAA/B,GACAK,IAIAJ,GAAA+B,IAAA/B,GACAK,IAIAN,EAAA+B,EACA9B,EAAA+B,EAGAzM,EAAA3G,UAAAiT,EACAtM,EAAAgM,WAAAO,EAEA3B,EAAA8B,QAAAJ,GACAzB,EAAA6B,QAAAH,GAEA3B,EAAA5V,OAAA,GACA4V,EAAA+B,MAEA9B,EAAA7V,OAAA,GACA6V,EAAA8B,OAKAC,EAAA,WAGA5B,EAAA,QACA6B,WAAA,WACA7B,EAAA,SACA,KACAhL,EAAApK,oBAAA,YAAAyW,GAAA,GACArM,EAAApK,oBAAA,WAAAgX,GAAA,GAGA5M,GAAA9K,iBAAA,YAAAmX,GAAA,GACArM,EAAA9K,iBAAA,WAAA0X,GAAA,IAIA7D,GAAA7T,iBAAA,aAAAsV,GAAA,OAGArW,KAAAA,KAAA2V,WCxMA,WACA,YACAhN,SAAAF,OAAA,0CAgGA6C,UAAA,SACA,eACA,SAAAqN,GACA,OACArM,SAAA,IACAxC,KAAA,SAAAqB,EAAAU,GACA8M,EAAA3O,SAAA,aACA6B,EAAAK,GAAA,WAAA,WACAyM,EAAA1O,YAAA,eAEAkB,EAAAjB,IAAA,WAAA,WACAyO,EAAA1O,YAAA,eAGA4B,EAAA+M,SAAA,mBACAD,EAAA3O,SAAA,qBACA6B,EAAAK,GAAA,WAAA,WACAyM,EAAA1O,YAAA,uBAEAkB,EAAAjB,IAAA,WAAA,WACAyO,EAAA1O,YAAA,gCCxCA,WACA,YAEA,IAAAxB,GAAAE,QAAAF,OAAA,0CA6BAE,SAAAyD,SAAA,MAAA,UAAA,SAAAyM,GACA,GAAAxM,GAAA,iBAAAwM,EAAAC,OAAA,GAAA1H,cAAAyH,EAAAnP,MAAA,EACAjB,GAAA6C,UAAAe,GACA,eACA,SAAAsM,GACA,OACArM,SAAA,IACAxC,KAAA,SAAAqB,GACAwN,EAAA3O,SAAA,cAAA6O,GACA1N,EAAAjB,IAAA,WAAA,WACAyO,EAAA1O,YAAA,cAAA4O,eCvDA,WACA,YACA,IAAApQ,GAAAE,QAAAF,OAAA,2CACA,mCAEAA,GAAA6C,UAAA,oBAAA,WACA,OACAgB,SAAA,IACAyM,YAAA,WAAA,wBAAA,SAAArM,EAAAF,GACA,GAAAwM,GAAAtM,EAAA,GACAuM,EAAAvM,EAAAM,SAAA,EAGA,IAAA,eAAAxJ,UAAA,CACA,GAAA0V,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAA,SAAArX,GACAgX,EAAAF,EAAA9T,UAAA,EACAiU,EAAAH,EAAA9T,UAAA8T,EAAAjU,aAAAiU,EAAAQ,aACAJ,EAAA,KACAC,EAAA,KACAC,EAAApX,EAAA+D,MAGAyG,GAAAR,GAAA,aAAAqN,GACA7M,EAAAR,GAAA,WAAA,WACAQ,EAAAG,IAAA,gBAGAL,EAAAE,EAAA,SAAAxK,GACA,GAAAuX,GAAAvX,EAAA+D,MAAAqT,EAAAjB,GAAAoB,CAEA,OADAH,GAAApX,EAAA+D,MACAwT,GAAAP,GAAAb,GAAAc,IAIAnZ,KAAAgZ,kBAAAA,EAEAhZ,KAAA0Z,SAAA,SAAAC,EAAAC,GAGA,GAFAA,EAAAA,GAAA,EAEAjR,QAAAkR,SAAAF,GACAX,EAAA9T,UAAAyU,EAAAC,MACA,CACA,GAAA9W,GAAA6F,QAAAoB,QAAA4P,GAAA,EACA7W,GAAAgX,cAAAhX,EAAAgX,eAAAb,EAIAjZ,KAAA0Z,SAAA5W,EAAAgX,aAAAF,EAAA9W,EAAAiX,WAHAf,EAAA9T,UAAApC,EAAAiX,UAAAH,MAQA9P,KAAA,SAAAqB,EAAApB,GACA,WAAA4L,UAAAG,UACA/L,EAAAC,SAAA,aACA2L,UAAAE,SACAF,UAAAnG,WAMA7G,QAAAyD,SAAA,QAAA,YAAA,SAAAC,GACA5D,EAAA6C,UAAAe,GAAA,aAAA,WAAA,SAAAxD,EAAAoE,GACA,OACA+M,QAAA,uBACAlQ,KAAA,SAAAqB,EAAAU,EAAAC,EAAAmN,GAEApN,EAAAK,GAAA,QAAA,WACA,GAAA+M,GAAAA,EAAAD,kBAAA,CACA,GAAAiB,GAAAhB,EAAAD,kBAAAhU,YACAiI,GAAA,WACA,GAAAiN,GAAAjB,EAAAD,kBAAAhU,YAKAiV,GAAAC,GACAjB,EAAAS,SAAA7N,EAAA,KAEA,eAuBAlD,QAAAyD,SAEA+N,YAAA,SAAAtO,GACA,MAAA,KAAAA,EAAA3G,WAEAkV,eAAA,SAAAvO,GACA,MAAAA,GAAA9G,eAAA8G,EAAA3G,UAAA2G,EAAA2N,eAGA,SAAAa,EAAAhO,GACA5D,EAAA6C,UAAAe,GAAA,WACA,OACAC,SAAA,IACAxC,KAAA,SAAAqB,EAAAU,EAAAC,GACAD,EAAAK,GAAA,SAAA,WAEAmO,EAAAxO,EAAA,KAEAV,EAAAkC,OAAA,WACAlC,EAAA8F,MAAAnF,EAAAO,eAkBA1D,QAAAyD,SAAAkO,IAAA,mBAAAC,OAAA,oBACA,SAAAlO,EAAAwM,GACApQ,EAAA6C,UAAAe,GACA,UACA,SAAAvD,GACA,OACAwD,SAAA,IACAxC,KAAA,SAAAqB,EAAApB,GACA,GAAAyQ,GAAAzQ,EAAA,GACA0Q,EAAA1Q,EAAAiD,SAAA,GAAA5E,MAEAsS,EAAA,WACA,GAAAC,GAAA7R,EAAA8R,iBAAAJ,GACAK,EAAAC,SAAAH,EAAAf,UAAA,IAAAkB,SAAAH,EAAAI,aAAA,GACAN,GAAA,UAAA5B,GAAA2B,EAAAxV,aAAA6V,EAAA,MAGAG,EAAAC,YAAAP,EAAA,GAEA3Q,GAAAmC,GAAA,WAAA,WACAuO,EAAA,UAAA5B,GAAA,KACAqC,cAAAF,GACAA,EAAAN,EAAA3Q,EAAA,iBC/LA,WACA,YAEA,IAAAtB,GAAAE,QAAAF,OACA,yCACA,qCACA,qCAIAE,SAAAyD,SAAA,OAAA,SAAA,SAAAyM,GACA,GAAAxM,GAAA,UAAAwM,EAAAC,OAAA,GAAA1H,cAAAyH,EAAAnP,MAAA,GACAyR,EAAA,KAAA9O,EAAAyM,OAAA,GAAA1H,cAAA/E,EAAA3C,MAAA,EAEAjB,GAAA6C,UAAAe,GACA,eACA,cACA,iBACA,YACA,SACAsM,EACA/H,EACAhD,EACA5E,GAEA,OACAsD,SAAA,IACAxC,KAAA,SAAAqB,EAAAU,EAAAC,GACA,GAAAsP,GAAA,eAAAvC,EACAwC,EAAA,WAAAxC,EAAA,WACAyC,EAAA,WAAAzC,EAAA,KAEA/M,GAAAuC,KACA8M,EAAArP,EAAAuC,GAGA,IAAAkN,GAAA,WACA3K,EAAAZ,QAAAmL,IAGAhO,EAAA,WACA,MAAAyD,GAAAT,SAAAgL,GAGAxC,GAAA3O,SAAAoR,GACAjQ,EAAAjB,IAAA,WAAA,WACAyO,EACA1O,YAAAmR,GACAzC,EACA1O,YAAAoR,GACA1C,EACA1O,YAAAqR,IAGA,IAAAE,GAAA/U,SAAAqF,EAAAsE,QAAA,UAAAtE,EAAAsE,MACAQ,GAAAxC,WAAAjD,EAAAgQ,GAAA5M,aAAAiN,IAEArQ,EAAAjB,IAAA,mCAAAiR,EAAA,SAAA5O,EAAA6D,IACA,KAAAtE,EAAA2P,sBAAA3P,EAAA2P,uBACAzS,EAAA0S,OAAAP,EAAA/K,GAAA,MAGAA,GACAuI,EACA3O,SAAAqR,GACA1C,EACA3O,SAAAsR,IAEA3C,EACA1O,YAAAqR,KAKAnQ,EAAAjB,IAAA,sBAAA,WACA0G,EAAAZ,QAAAmL,KAGAhQ,EAAAjB,IAAA,eAAA,WACA4B,EAAA2P,uBACAzS,EAAA0S,SAAAP,GACAvK,EAAAhB,OAAAuL,GAEAvK,EAAAZ,QAAAmL,MAKAhQ,EAAAjB,IAAA,sCAAA,WACA0G,EAAAT,SAAAgL,IACAxC,EAAA1O,YAAAoR,KAIA,UAAAvP,EAAA6P,oBACA/N,EAAAzC,EAAAU,EAAA0P,EAAApO,UAQA1E,EAAA6C,UAAA,OAAA,aAAA,SAAAzC,GACA,OACAyD,SAAA,IACAxC,KAAA,SAAAqB,EAAApB,GAEAA,EAAAmC,GAAA,kEAAA,WACArD,EAAAgG,WAAA,iDCtIA,WACA,YACAlG,SAAAF,OAAA,0CACA6C,UAAA,WAAA,WACA,OACAgB,SAAA,KACAsJ,SAAA,EACAzK,OACAyQ,MAAA,WACAC,WAAA,YACA5Y,SAAA,KAEA6Y,SAAA,yFACAhS,KAAA,SAAAqB,EAAAU,EAAAC,GAEAD,EAAAK,GAAA,YAAA,YACA,OAAAJ,EAAA7I,UAAAwD,SAAAqF,EAAA7I,YACAkI,EAAAyQ,OAAAzQ,EAAAyQ,MACAzQ,EAAAkC,SAEA,OAAAlC,EAAA0Q,YAAApV,SAAA0E,EAAA0Q,YACA1Q,EAAA4Q,QAAA9K,MAAA9F,EAAA0Q,eAKAhQ,EAAA7B,SAAA,oCCtBA,WACA,YAEArB,SAAAF,OAAA,gCACA,sCACA,uCACA,wCACA,0CACA,2CCVA,WACA,YAEAE,SAAAF,OAAA,qBACA,yBACA","file":"mobile-angular-ui.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n  var module = angular.module('mobile-angular-ui.core.fastclick', []);\r\n\r\n  module.run(function() {\r\n    if ('addEventListener' in document) {\r\n      document.addEventListener('DOMContentLoaded', function() {\r\n          FastClick.attach(document.body);\r\n      }, false);\r\n    }\r\n  });\r\n\r\n  angular.forEach(['select', 'input', 'textarea'], function(directiveName){\r\n    module.directive(directiveName, function(){\r\n      return {\r\n        restrict: 'E',\r\n        compile: function(elem) {\r\n          elem.addClass('needsclick');\r\n        }\r\n      };\r\n    });\r\n  });\r\n}());","/**\r\n@module mobile-angular-ui.core.activeLinks\r\n@description\r\n\r\n`mobile-angular-ui.activeLinks` module sets up `.active` class for `a` elements those `href` attribute matches the current angular `$location` url. It takes care of excluding both search part and hash part from comparison.\r\n\r\n`.active` classes are added/removed each time one of `$locationChangeSuccess` or `$includeContentLoaded` is fired.\r\n\r\n## Usage\r\n\r\nJust declare it as a dependency to your app unless you have already included one of its super-modules.\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui.core.activeLinks']);\r\n```\r\n\r\n**NOTE:** if you are using it without Bootstrap you may need to add some css to your stylesheets to reflect the activation state of links. I.e.\r\n\r\n``` css\r\na.active {\r\n  color: blue;\r\n}\r\n```\r\n\r\n*/\r\n(function () {\r\n  'use strict';\r\n\r\n  angular.module(\"mobile-angular-ui.core.activeLinks\", [])\r\n\r\n  .run([\r\n      '$rootScope', \r\n      '$window', \r\n      '$document',\r\n      '$location',\r\n      function($rootScope, $window, $document, $location){\r\n\r\n        var setupActiveLinks = function() {\r\n          // Excludes both search part and hash part from \r\n          // comparison.\r\n          var url = $location.url(),\r\n              firstHash = url.indexOf('#'),\r\n              firstSearchMark = url.indexOf('?'),\r\n              locationHref = $window.location.href,\r\n              plainUrlLength = locationHref.indexOf(url),\r\n              newPath;\r\n\r\n          if (firstHash === -1 && firstSearchMark === -1) {\r\n            newPath = locationHref;\r\n          } else if (firstHash !== -1 && firstHash > firstSearchMark) {\r\n            newPath = locationHref.slice(0, plainUrlLength + firstHash);\r\n          } else if (firstSearchMark !== -1 && firstSearchMark > firstHash) {\r\n            newPath = locationHref.slice(0, plainUrlLength + firstSearchMark);\r\n          }\r\n          \r\n          var domLinks = $document[0].links;\r\n          for (var i = 0; i < domLinks.length; i++) {\r\n            var domLink = domLinks[i];\r\n            var link    = angular.element(domLink);\r\n\r\n            if (domLink.href === newPath) {\r\n              link.addClass('active');\r\n            } else if (domLink.href && domLink.href.length) {\r\n              link.removeClass('active');\r\n            }\r\n          }\r\n        };\r\n\r\n        $rootScope.$on('$locationChangeSuccess', setupActiveLinks);\r\n        $rootScope.$on('$includeContentLoaded', setupActiveLinks);\r\n      }\r\n  ]);\r\n\r\n}());\r\n\r\n","/** \r\n@module mobile-angular-ui.core.capture\r\n@description\r\n\r\nThe `capture` module exposes directives to let you extract markup which can be used in other parts of a template using `uiContentFor` and `uiYieldTo` directives.\r\n\r\nIt provides a way to move or clone a block of markup to other parts of the document.\r\n\r\nThis method is particularly useful to setup parts of the layout within an angular view. Since blocks of html are transplanted within their original `$scope` is easy to create layout interactions depending on the context. Some tipical task you can accomplish with these directives are: _setup the navbar title depending on the view_ or _place a submit button for a form inside a navbar_.\r\n\r\n## Usage\r\n\r\nDeclare it as a dependency to your app unless you have already included some of its super-modules.\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui']);\r\n```\r\n\r\nOr\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui']);\r\n```\r\n\r\nOr\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui.core.capture']);\r\n```\r\n\r\nUse `ui-yield-to` as a placeholder.\r\n\r\n``` html\r\n<!-- index.html -->\r\n\r\n<div class=\"navbar\">\r\n  <div ui-yield-to=\"title\" class=\"navbar-brand\">\r\n    <span>Default Title</span>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"app-body\">\r\n  <ng-view class=\"app-content\"></ng-view>\r\n</div>\r\n```\r\n\r\nUse `ui-content-for` inside any view to populate the `ui-yield-to` content.\r\n\r\n``` html\r\n<!-- myView.html -->\r\n\r\n<div ui-content-for=\"title\">\r\n  <span>My View Title</span>\r\n</div>\r\n```\r\n\r\nSince the original scope is preserved you can use directives inside `ui-content-for` blocks to interact with the current scope. In the following example we will add a navbar button to submit a form inside a nested view.  \r\n\r\n\r\n``` html\r\n<!-- index.html -->\r\n\r\n<div class=\"navbar\">\r\n  <div ui-yield-to=\"navbarAction\">\r\n  </div>\r\n</div>\r\n\r\n<div class=\"app-body\">\r\n  <ng-view class=\"app-content\"></ng-view>\r\n</div>\r\n```\r\n\r\n``` html\r\n<!-- newCustomer.html -->\r\n\r\n<form ng-controller=\"newCustomerController\">\r\n\r\n  <div class=\"inputs\">\r\n    <input type=\"text\" ng-model=\"customer.name\" />  \r\n  </div>\r\n\r\n  <div ui-content-for=\"navbarAction\">\r\n    <button ng-click=\"createCustomer()\">\r\n      Save\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n```\r\n\r\n``` javascript\r\napp.controller('newCustomerController', function($scope, Store){\r\n  $scope.customer = {};\r\n  $scope.createCustomer = function(){\r\n    Store.create($scope.customer);\r\n    // ...\r\n  }\r\n});\r\n```\r\n\r\nIf you wish you can also duplicate markup instead of move it. Just add `duplicate` parameter to `uiContentFor` directive to specify this behaviour.\r\n\r\n``` html\r\n<div ui-content-for=\"navbarAction\" duplicate>\r\n  <button ng-click=\"createCustomer()\">\r\n    Save\r\n  </button>\r\n</div>\r\n```\r\n*/\r\n(function () {\r\n   'use strict';\r\n\r\n   angular.module('mobile-angular-ui.core.capture', [])\r\n\r\n   .run([\r\n     'Capture', \r\n     '$rootScope', \r\n     function(Capture, $rootScope) {\r\n       $rootScope.$on('$routeChangeStart', function() {\r\n         Capture.resetAll();\r\n       });\r\n     }\r\n   ])\r\n\r\n   .factory('Capture', [\r\n     '$compile', \r\n     function($compile) {\r\n       var yielders = {};\r\n\r\n       return {\r\n         resetAll: function() {\r\n           for (var name in yielders) {\r\n            if (yielders.hasOwnProperty(name)) {\r\n              this.resetYielder(name); \r\n            }\r\n           }\r\n         },\r\n         \r\n         resetYielder: function(name) {\r\n           var b = yielders[name];\r\n           this.setContentFor(name, b.defaultContent, b.defaultScope);\r\n         },\r\n\r\n         putYielder: function(name, element, defaultScope, defaultContent) {\r\n           var yielder = {};\r\n           yielder.name = name;\r\n           yielder.element = element;\r\n           yielder.defaultContent = defaultContent || '';\r\n           yielder.defaultScope = defaultScope;\r\n           yielders[name] = yielder;\r\n         },\r\n\r\n         getYielder: function(name) {\r\n           return yielders[name];\r\n         },\r\n\r\n         removeYielder: function(name) {\r\n           delete yielders[name];\r\n         },\r\n         \r\n         setContentFor: function(name, content, scope) {\r\n           var b = yielders[name];\r\n           if (!b) {\r\n             return;\r\n           }\r\n           b.element.html(content);\r\n           $compile(b.element.contents())(scope);\r\n         }\r\n\r\n       };\r\n     }\r\n   ])\r\n\r\n  /**\r\n   * @directive uiContentFor\r\n   * @restrict A\r\n   *\r\n   * `ui-content-for` makes inner contents to replace the corresponding \r\n   * `ui-yield-to` placeholder contents.\r\n   *\r\n   * `uiContentFor` is intended to be used inside a view in order to populate outer placeholders.\r\n   * Any content you send to placeholders via `ui-content-for` is\r\n   * reverted to placeholder defaults after view changes (ie. on `$routeChangeStart`).\r\n   * \r\n   * @param {string} uiContentFor The id of the placeholder to be replaced\r\n   * @param {boolean} uiDuplicate If present duplicates the content instead of moving it (default to `false`)\r\n   *\r\n   */\r\n   .directive('uiContentFor', [\r\n     'Capture', \r\n     function(Capture) {\r\n       return {\r\n         compile: function(tElem, tAttrs) {\r\n           var rawContent = tElem.html();\r\n           if(tAttrs.uiDuplicate === null || tAttrs.uiDuplicate === undefined) {\r\n             // no need to compile anything!\r\n             tElem.html('');\r\n             tElem.remove();\r\n           }\r\n           return function(scope, elem, attrs) {\r\n             Capture.setContentFor(attrs.uiContentFor, rawContent, scope);\r\n           };\r\n         }\r\n       };\r\n     }\r\n   ])\r\n\r\n   /**\r\n    * @directive uiYieldTo\r\n    * @restrict A\r\n    *\r\n    * `ui-yield-to` defines a placeholder which contents will be further replaced by `ui-content-for` directive.\r\n    *\r\n    * Inner html is considered to be a default. Default is restored any time `$routeChangeStart` happens.\r\n    * \r\n    * @param {string} uiYieldTo The unique id of this placeholder.\r\n    *\r\n    */\r\n   .directive('uiYieldTo', [\r\n     '$compile', 'Capture', function($compile, Capture) {\r\n       return {\r\n         link: function(scope, element, attr) {\r\n           Capture.putYielder(attr.uiYieldTo, element, scope, element.html());\r\n           \r\n           element.on('$destroy', function(){\r\n             Capture.removeYielder(attr.uiYieldTo);\r\n           });\r\n           \r\n           scope.$on('$destroy', function(){\r\n             Capture.removeYielder(attr.uiYieldTo);\r\n           });\r\n         }\r\n       };\r\n     }\r\n   ]);\r\n\r\n}());","/**\r\n * Enable prevention of window bounce in IOS.\r\n *\r\n * Requiring this module the `touchmove.preventDefault` logic is inverted. \r\n * So any `touchmove` default behaviour is automatically prevented.\r\n * \r\n * If you wish to allow the default behaviour, for example to allow \r\n * inner elements to scroll, you have to explicitly setup `e.allowTouchmoveDefault` \r\n * to `true`.\r\n *\r\n * Mobile Angular UI already handles this for `scrollable` elements.\r\n *\r\n * You can easily disable this for an element, or under some circumstances through\r\n * the `allowTouchmoveDefault` service provided in this module.\r\n * \r\n * @module mobile-angular-ui.core.nobounce\r\n */\r\n(function () {\r\n  'use strict';\r\n  var module = angular.module('mobile-angular-ui.core.nobounce', []);\r\n\r\n  if ('ontouchmove' in document) {\r\n    module.run(function() {\r\n      angular.element(document).on('touchmove', function(e) {\r\n        if (e.allowTouchmoveDefault !== true) {\r\n          e.preventDefault();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Bind a listener to an element to allow `touchmove` default behaviour\r\n   * when `touchmove` happens inside the bound element.\r\n   * \r\n   * You can also provide a function to decide when to allow and \r\n   * when to prevent it.\r\n   *\r\n   * ``` js\r\n   * // always allow touchmove default\r\n   * allowTouchmoveDefault(myelem);\r\n   * \r\n   * // allow touchmove default only under certain conditions\r\n   * allowTouchmoveDefault(myelem, function(touchmove){\r\n   *   return touchmove.pageY > 100;\r\n   * });\r\n   * ```\r\n   *\r\n   * @param {Element|$element} element The element to bind.\r\n   * @param {function} condition A `function(touchmove)⟶boolean` to decide\r\n   *                             whether to allow default behavior or not. \r\n   * \r\n   * @service allowTouchmoveDefault\r\n   * @as function\r\n   * @returns function Function to unbind the listener\r\n   */\r\n  \r\n  module.factory('allowTouchmoveDefault', function(){\r\n    var fnTrue = function() { return true; };\r\n\r\n    if ('ontouchmove' in document) {\r\n        return function($element, condition) {\r\n          condition = condition || fnTrue;\r\n\r\n          var allowTouchmoveDefaultCallback = function(e) {\r\n            if (condition(e)) { e.allowTouchmoveDefault = true; }\r\n          };\r\n\r\n          $element = angular.element($element);\r\n          $element.on('touchmove',  allowTouchmoveDefaultCallback);\r\n\r\n          $element.on('$destroy', function() {\r\n            $element.off('touchmove', allowTouchmoveDefaultCallback);\r\n            $element = null;\r\n          });\r\n\r\n          return function() {\r\n            if ($element) {\r\n              $element.off('touchmove', allowTouchmoveDefaultCallback);              \r\n            }\r\n          };\r\n        };\r\n    } else {\r\n      return angular.noop;\r\n    }\r\n  });\r\n\r\n}());","/**\r\n\r\n@module mobile-angular-ui.core.outerClick\r\n@description\r\n\r\nProvides a directive to specifiy a behaviour when click/tap events \r\nhappen outside an element. This can be easily used \r\nto implement eg. __close on outer click__ feature for a dropdown.\r\n\r\n## Usage\r\n\r\nDeclare it as a dependency to your app unless you have already \r\nincluded some of its super-modules.\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui']);\r\n```\r\n\r\nOr\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui.core']);\r\n```\r\n\r\nOr\r\n\r\n```\r\nangular.module('myApp', ['mobile-angular-ui.core.outerClick']);\r\n```\r\n\r\nUse `ui-outer-click` to define an expression to evaluate when an _Outer Click_ event happens.\r\nUse `ui-outer-click-if` parameter to define a condition to enable/disable the listener.\r\n\r\n``` html\r\n<div class=\"btn-group\">\r\n  <a ui-turn-on='myDropdown' class='btn'>\r\n    <i class=\"fa fa-ellipsis-v\"></i>\r\n  </a>\r\n  <ul \r\n    class=\"dropdown-menu\"\r\n    ui-outer-click=\"Ui.turnOff('myDropdown')\"\r\n    ui-outer-click-if=\"Ui.active('myDropdown')\"\r\n    role=\"menu\"\r\n    ui-show=\"myDropdown\" \r\n    ui-state=\"myDropdown\"\r\n    ui-turn-off=\"myDropdown\">\r\n\r\n    <li><a>Action</a></li>\r\n    <li><a>Another action</a></li>\r\n    <li><a>Something else here</a></li>\r\n    <li class=\"divider\"></li>\r\n    <li><a>Separated link</a></li>\r\n  </ul>\r\n</div>\r\n```\r\n\r\n*/\r\n(function () {\r\n   'use strict';\r\n\r\n   var isAncestorOrSelf = function(element, target) {\r\n     var parent = element;\r\n     while (parent.length > 0) {\r\n       if (parent[0] === target[0]) {\r\n         parent = null;\r\n         return true;\r\n       }\r\n       parent = parent.parent();\r\n     }\r\n     parent = null;\r\n     return false;\r\n   };\r\n\r\n   angular.module('mobile-angular-ui.core.outerClick', [])\r\n\r\n   /**\r\n    * @service bindOuterClick\r\n    * @as function\r\n    * \r\n    * @description\r\n    * This is a service function that binds a callback to be conditionally executed\r\n    * when a click event happens outside a specified element.\r\n    *\r\n    * Ie.\r\n    * \r\n    * ``` js\r\n    * app.directive('myDirective', function('bindOuterClick'){\r\n    *   return {\r\n    *     link: function(scope, element) {\r\n    *       bindOuterClick(element, function(scope, extra){\r\n    *         alert('You clicked ouside me!');\r\n    *       }, function(e){\r\n    *         return element.hasClass('disabled') ? true : false;\r\n    *       });\r\n    *     }\r\n    *   };\r\n    * });\r\n    * ```\r\n    * @scope {scope} the scope to eval callbacks\r\n    * @param {DomElement|$element} element The element to bind to. \r\n    * @param {function} callback A `function(scope, options)`, usually the result of `$parse`, that is called when an _outer click_ event happens.\r\n    * @param {string|function} condition Angular `$watch` expression to decide whether to run `callback` or not.\r\n    */\r\n   .factory('bindOuterClick', [\r\n     '$document',\r\n     '$timeout',\r\n     function ($document, $timeout) {\r\n       \r\n       return function (scope, element, outerClickFn, outerClickIf) {\r\n         var handleOuterClick = function(event){\r\n           if (!isAncestorOrSelf(angular.element(event.target), element)) {\r\n             scope.$apply(function() {\r\n               outerClickFn(scope, {$event:event});\r\n             });\r\n           }\r\n         };\r\n\r\n         var stopWatching = angular.noop;\r\n         var t = null;\r\n\r\n         if (outerClickIf) {\r\n           stopWatching = scope.$watch(outerClickIf, function(value){\r\n             $timeout.cancel(t);\r\n\r\n             if (value) {\r\n               // prevents race conditions \r\n               // activating with other click events\r\n               t = $timeout(function() {\r\n                 $document.on('click tap', handleOuterClick);\r\n               }, 0);\r\n\r\n             } else {\r\n               $document.unbind('click tap', handleOuterClick);    \r\n             }\r\n           });\r\n         } else {\r\n           $timeout.cancel(t);\r\n           $document.on('click tap', handleOuterClick);\r\n         }\r\n\r\n         scope.$on('$destroy', function(){\r\n           stopWatching();\r\n           $document.unbind('click tap', handleOuterClick);\r\n         });\r\n       };\r\n     }\r\n   ])\r\n\r\n\r\n  /**\r\n   * @directive outerClick\r\n   * \r\n   * @description\r\n   * Evaluates an expression when an _Outer Click_ event happens.\r\n   * \r\n   * @param {expression} uiOuterClick Expression to evaluate when an _Outer Click_ event happens.\r\n   * @param {expression} uiOuterClickIf Condition to enable/disable the listener. Defaults to `true`.\r\n   */\r\n   .directive('uiOuterClick', [\r\n     'bindOuterClick', \r\n     '$parse',\r\n     function(bindOuterClick, $parse){\r\n       return {\r\n         restrict: 'A',\r\n         compile: function(elem, attrs) {\r\n           var outerClickFn = $parse(attrs.uiOuterClick);\r\n           var outerClickIf = attrs.uiOuterClickIf;\r\n           return function(scope, elem) {\r\n             bindOuterClick(scope, elem, outerClickFn, outerClickIf);\r\n           };\r\n         }\r\n       };\r\n     }\r\n   ]);\r\n}());","(function() {\r\n  'use strict';  \r\n  /**\r\n   * @module mobile-angular-ui.core.sharedState\r\n   *\r\n   * @description\r\n   * `mobile-angular-ui.core.sharedState` is expose the homonymous service\r\n   * `SharedState` and a group of directives to access it.\r\n   *\r\n   * `SharedState` allows to use elementary angular or angularish directives\r\n   * to create interactive components.\r\n   *\r\n   * Ie.\r\n   *\r\n   * ``` html\r\n   * <div class=\"tab-nav\" ui-state='activeTab'>\r\n   *   <a ui-set=\"{activeTab: 1}\">Tab1</a>\r\n   *   <a ui-set=\"{activeTab: 2}\">Tab2</a>\r\n   *   <a ui-set=\"{activeTab: 3}\">Tab3</a>\r\n   * </div>\r\n   * <div class=\"tabs\">\r\n   *   <div ui-if=\"activeTab == 1\">Tab1</div>\r\n   *   <div ui-if=\"activeTab == 2\">Tab2</div>\r\n   *   <div ui-if=\"activeTab == 3\">Tab3</div>\r\n   * </div>\r\n   * ```\r\n   * \r\n   * Using `SharedState` you will be able to:\r\n   * \r\n   * - Create interactive components without having to write javascript code\r\n   * - Have your controller free from UI logic\r\n   * - Separe `ng-click` triggering application logic from those having a visual effect only\r\n   * - Export state of components to urls\r\n   * - Easily make components comunicate each other\r\n   *\r\n   * Also note that:\r\n   *\r\n   * Data structures retaining statuses will stay outside angular scopes\r\n   * thus they are not evaluated against digest cycle until its necessary. \r\n   * Also although statuses are sort of global variables `SharedState` will \r\n   * take care of disposing them when no scopes are requiring them anymore.\r\n   * \r\n   * A set of `ui-*` directives are available to interact with `SharedState`\r\n   * module and will hopefully let you spare your controllers and your time \r\n   * for something that is more meaningful than this:\r\n   * \r\n   * ``` js\r\n   * $scope.activeTab = 1;\r\n   * \r\n   * $scope.setActiveTab = function(n) {\r\n   *   $scope.activeTab = n;\r\n   * };\r\n   * ```\r\n   * \r\n   * ## Usage\r\n   * \r\n   * Declare it as a dependency to your app unless you have already included some of its super-modules.\r\n   * \r\n   * ```\r\n   * angular.module('myApp', ['mobile-angular-ui.core.sharedState']);\r\n   * ```\r\n   * \r\n   * Use `ui-state` directive to require/initialize a state from the target element scope\r\n   * \r\n   * Example: Tabs\r\n   * \r\n   * ``` html\r\n   * \r\n   * <div class=\"tabs\" ui-state=\"activeTab\">\r\n   * \r\n   *   <ul class=\"nav nav-tabs\">\r\n   *     <li ui-class=\"{'active': activeTab == 1)}\">\r\n   *       <a ui-set=\"{'activeTab': 1}\">Tab 1</a>\r\n   *     </li>\r\n   *     <li ui-class=\"{'active': activeTab == 2)}\">\r\n   *       <a ui-set=\"{'activeTab': 2}\">Tab 2</a>\r\n   *     </li>\r\n   *     <li ui-class=\"{'active': activeTab == 3)}\">\r\n   *       <a ui-set=\"{'activeTab': 3}\">Tab 3</a>\r\n   *     </li>\r\n   *   </ul>\r\n   * \r\n   *   <div ui-if=\"activeTab == 1\">\r\n   *     Tab 1\r\n   *   </div>\r\n   * \r\n   *   <div ui-if=\"activeTab == 2\">\r\n   *     Tab 2\r\n   *   </div>\r\n   * \r\n   *   <div ui-if=\"activeTab == 3\">\r\n   *     Tab 3\r\n   *   </div>\r\n   * \r\n   * </div>\r\n   * ```\r\n   * \r\n   * NOTE: `ui-toggle/set/turnOn/turnOff` responds to `click/tap` without stopping propagation so you can use them along with ng-click too. You can also change events to respond to with `ui-triggers` attribute.\r\n   * \r\n   * Any `SharedState` method is exposed through `Ui` object in `$rootScope`. So you could always do `ng-click=\"Ui.turnOn('myVar')\"`.\r\n   * \r\n   * Since `SharedState` is a service you can initialize/set statuses through controllers too:\r\n   * \r\n   * ``` js\r\n   * app.controller('myController', function($scope, SharedState){\r\n   *   SharedState.initialize($scope, \"activeTab\", 3);\r\n   * });\r\n   * ```\r\n   * \r\n   * As well as you can use `ui-default` for that: \r\n   * \r\n   * ``` html\r\n   * <div class=\"tabs\" ui-state=\"activeTab\" ui-default=\"thisIsAnExpression(5 + 1 - 2)\"></div>\r\n   * ```\r\n   * \r\n   */\r\n  var module = angular.module('mobile-angular-ui.core.sharedState', []);\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @class SharedState\r\n   *\r\n   * @description\r\n   * \r\n   * A `SharedState` state can be considered as a global variable identified by an `id`.\r\n   * \r\n   * `SharedState` service exposes methods to interact with statuses to create, read and update states. \r\n   * \r\n   * It acts as a BUS between UI elements to share UI related state that is automatically disposed when all scopes requiring it are destroyed.\r\n   * \r\n   * eg.\r\n   * \r\n   * ``` js\r\n   * app.controller('controller1', function($scope, SharedState){\r\n   *   SharedState.initialize($scope, 'myId');\r\n   * });\r\n   * \r\n   * app.controller('controller2', function(SharedState){\r\n   *   SharedState.toggle('myId');\r\n   * });\r\n   * ```\r\n   * \r\n   * Data structures retaining statuses will stay outside angular scopes thus they are not evaluated against digest cycle until its necessary. Also although statuses are sort of global variables `SharedState` will take care of disposing them when no scopes are requiring them anymore.\r\n   * \r\n   * A set of `ui-*` directives are available to interact with `SharedState` module and will hopefully let you spare your controllers and your time for something that is more meaningful than this:\r\n   * \r\n   * ``` js\r\n   * $scope.activeTab = 1;\r\n   * \r\n   * $scope.setActiveTab = function(n) {\r\n   *   $scope.activeTab = n;\r\n   * };\r\n   * ```\r\n   *\r\n   */\r\n  \r\n   /**\r\n    * @event 'mobile-angular-ui.state.initialized.ID'\r\n    * @shortname initialized\r\n    * @memberOf mobile-angular-ui.core.sharedState~SharedState \r\n    * \r\n    * @description\r\n    * Broadcasted on `$rootScope` when `#initialize` is called for a new state not referenced by any scope currently.\r\n    * \r\n    * @param {any} currentValue The value with which this state has been initialized\r\n    * \r\n    * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n    */\r\n   \r\n   /**\r\n    * @event 'mobile-angular-ui.state.destroyed.ID'\r\n    * @shortname destroyed\r\n    * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n    * \r\n    * @description\r\n    * Broadcasted on `$rootScope` when a state is destroyed.         \r\n    * \r\n    */\r\n   \r\n    /**\r\n     * @event 'mobile-angular-ui.state.changed.ID'\r\n     * @shortname changed\r\n     * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n     * \r\n     * @description\r\n     * Broadcasted on `$rootScope` the value of a state changes.\r\n     * \r\n     * ``` js\r\n     * $scope.$on('mobile-angular-ui.state.changed.uiSidebarLeft', function(e, newVal, oldVal) {\r\n     *   if (newVal === true) {\r\n     *     console.log('sidebar opened');\r\n     *   } else {\r\n     *     console.log('sidebar closed');\r\n     *   }\r\n     * });\r\n     * ```\r\n     * \r\n     * @param {any} newValue\r\n     * @param {any} oldValue\r\n     * \r\n     */  \r\n\r\n  module.factory('SharedState', [\r\n    '$rootScope',\r\n    function($rootScope){\r\n      var values = {};    // values, context object for evals\r\n      var statusesMeta = {};  // status info\r\n      var scopes = {};    // scopes references\r\n      var exclusionGroups = {}; // support exclusive boolean sets\r\n\r\n      return {\r\n        /**\r\n         * @function initialize\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         *\r\n         * Initialize, or require if already intialized, a state identified by `id` within the provided `scope`, making it available to the rest of application.\r\n         * \r\n         * A `SharedState` is bound to one or more scopes. Each time `initialize` is called for an angular `scope` this will be bound to the `SharedState` and a reference count is incremented to allow garbage collection.\r\n         * \r\n         * Reference count is decremented once the scope is destroyed. When the counter reach 0 the state will be disposed.\r\n         * \r\n         * @param  {scope} scope The scope to bound this state\r\n         * @param  {string} id The unique name of this state \r\n         * @param  {object} [options] Options\r\n         * @param  {object} [options.defaultValue] the initialization value, it is taken into account only if the state `id` is not already initialized\r\n         * @param  {object} [options.exclusionGroup] Specifies an exclusion group for the state. This means that for boolean operations (ie. toggle, turnOn, turnOf) when this state is set to `true`, any other state that is in the same `exclusionGroup` will be set to `false`.\r\n         */\r\n        initialize: function(scope, id, options) {\r\n          options = options || {};\r\n          \r\n          var isNewScope = scopes[scope] === undefined,\r\n              defaultValue = options.defaultValue,\r\n              exclusionGroup = options.exclusionGroup;\r\n\r\n          scopes[scope.$id] = scopes[scope.$id] || [];\r\n          scopes[scope.$id].push(id);\r\n\r\n          if (!statusesMeta[id]) { // is a brand new state \r\n                                   // not referenced by any \r\n                                   // scope currently\r\n\r\n            statusesMeta[id] = angular.extend({}, options, {references: 1});\r\n\r\n            $rootScope.$broadcast('mobile-angular-ui.state.initialized.' + id, defaultValue);\r\n\r\n            if (defaultValue !== undefined) {\r\n              this.setOne(id, defaultValue);\r\n            }\r\n\r\n            if (exclusionGroup) {\r\n              // Exclusion groups are sets of statuses references\r\n              exclusionGroups[exclusionGroup] = exclusionGroups[exclusionGroup] || {};\r\n              exclusionGroups[exclusionGroup][id] = true;\r\n            }\r\n\r\n          } else if (isNewScope) { // is a new reference from \r\n                                   // a different scope\r\n            statusesMeta[id].references++; \r\n          }\r\n          scope.$on('$destroy', function(){\r\n            var ids = scopes[scope.$id] || [];\r\n            for (var i = 0; i < ids.length; i++) {\r\n              var status = statusesMeta[ids[i]];\r\n              \r\n              if (status.exclusionGroup) {\r\n                delete exclusionGroups[status.exclusionGroup][ids[i]];\r\n                if (Object.keys(exclusionGroups[status.exclusionGroup]).length === 0) {\r\n                  delete exclusionGroups[status.exclusionGroup];\r\n                }\r\n              }\r\n\r\n              status.references--;\r\n              if (status.references <= 0) {\r\n                delete statusesMeta[ids[i]];\r\n                delete values[ids[i]];\r\n                $rootScope.$broadcast('mobile-angular-ui.state.destroyed.' + id);\r\n              }\r\n            }\r\n            delete scopes[scope.$id];\r\n          });\r\n        },\r\n\r\n        /**\r\n         * @function setOne\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         *\r\n         * Set the value of the state identified by `id` to the `value` parameter.\r\n         *\r\n         * @param  {string} id Unique identifier for state\r\n         * @param  {any} value New value for this state\r\n         */\r\n        setOne: function(id, value) {\r\n          if (statusesMeta[id] !== undefined) {\r\n            var prev = values[id];\r\n            values[id] = value;\r\n            if (prev !== value) {\r\n              $rootScope.$broadcast('mobile-angular-ui.state.changed.' + id, value, prev);\r\n            }\r\n            return value;\r\n          } else {\r\n            /* global console: false */\r\n            if (console) {\r\n              console.warn('Warning: Attempt to set uninitialized shared state:', id);\r\n            }\r\n          }\r\n        },\r\n\r\n        /**\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * \r\n         * @function setMany\r\n         * @description\r\n         *\r\n         * Set multiple statuses at once. ie.\r\n         * \r\n         * ```\r\n         * SharedState.setMany({ activeTab: 'firstTab', sidebarIn: false });\r\n         * ```\r\n         * \r\n         * @param {object} object An object of the form `{state1: value1, ..., stateN: valueN}`\r\n         */\r\n        setMany: function(map) {\r\n          angular.forEach(map, function(value, id) {\r\n            this.setOne(id, value);\r\n          }, this);\r\n        },\r\n\r\n\r\n        /**\r\n         * @function set\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         * \r\n         * A shorthand for both `setOne` and `setMany`.\r\n         * When called with only one parameter that is an object \r\n         * it is the same of `setMany`, otherwise is the \r\n         * same of `setOne`.\r\n         * \r\n         * @param {string|object} idOrMap A state id or a `{state: value}` map object.\r\n         * @param {any} [value] The value to assign in case idOrMap is a string.\r\n         */\r\n        set: function(idOrMap, value) {\r\n          if (angular.isObject(idOrMap) && angular.isUndefined(value)) {\r\n            this.setMany(idOrMap);\r\n          } else {\r\n            this.setOne(idOrMap, value);\r\n          }\r\n        },\r\n\r\n        /**\r\n         * @function turnOn\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         * \r\n         * Set shared state identified by `id` to `true`. If the \r\n         * shared state has been initialized with `exclusionGroup` \r\n         * option it will also turn off (set to `false`) all other \r\n         * statuses from the same exclusion group.\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         */\r\n        turnOn: function(id) {\r\n          // Turns off other statuses belonging to the same exclusion group.\r\n          var eg = statusesMeta[id] && statusesMeta[id].exclusionGroup;\r\n          if (eg) {\r\n            var egStatuses = Object.keys(exclusionGroups[eg]);\r\n            for (var i = 0; i < egStatuses.length; i++) {\r\n              var item = egStatuses[i];\r\n              if (item !== id) {\r\n                this.turnOff(item);\r\n              }\r\n            }\r\n          }\r\n          return this.setOne(id, true);\r\n        },\r\n\r\n        /**\r\n         * @function turnOff\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * \r\n         * @description\r\n         * Set shared state identified by `id` to `false`.\r\n         *\r\n         * @param  {string} id The unique name of this state\r\n         */\r\n        turnOff: function(id) {\r\n          return this.setOne(id, false);\r\n        },\r\n\r\n        /**\r\n         * @function toggle\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         *\r\n         * If current value for shared state identified by `id` evaluates \r\n         * to `true` it calls `turnOff` on it otherwise calls `turnOn`. \r\n         * Be aware that it will take into account `exclusionGroup` option. \r\n         * See `#turnOn` and `#initialize` for more.\r\n         *\r\n         * @param  {string} id The unique name of this state\r\n         */\r\n        toggle: function(id) {\r\n          return this.get(id) ? this.turnOff(id) : this.turnOn(id);\r\n        },\r\n\r\n        /**\r\n         * @function get\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * \r\n         * @description\r\n         * Returns the current value of the state identified by `id`.\r\n         *\r\n         * @param  {string} id The unique name of this state\r\n         * @returns {any}\r\n         */\r\n        get: function(id) {\r\n          return statusesMeta[id] && values[id];\r\n        },\r\n\r\n        /**\r\n         * @function isActive\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         *\r\n         * Return `true` if the boolean conversion of `#get(id)` evaluates to `true`.\r\n         *\r\n         * @param  {string} id The unique name of this state\r\n         * @returns {bool}\r\n         */\r\n        isActive: function(id) {\r\n          return !! this.get(id);\r\n        },\r\n\r\n        /**\r\n         * @function active\r\n         * @alias mobile-angular-ui.core.sharedState~SharedState.isActive\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         * \r\n         * Alias for `#isActive`.\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         * @returns {bool}\r\n         */\r\n        active: function(id) {\r\n          return this.isActive(id);\r\n        },\r\n\r\n        /**\r\n         * @function isUndefined\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @description\r\n         * \r\n         * Return `true` if state identified by `id` is not defined.\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         * @returns {bool}\r\n         */\r\n        isUndefined: function(id) {\r\n          return statusesMeta[id] === undefined || this.get(id) === undefined;\r\n        },\r\n\r\n        /**\r\n         * Returns `true` if state identified by `id` exsists.\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         * @returns {bool}\r\n         * \r\n         * @function has\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         */\r\n        has: function(id) {\r\n          return statusesMeta[id] !== undefined;\r\n        },\r\n\r\n        /**\r\n         * Returns the number of references of a status.\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         * @returns {integer}\r\n         * \r\n         * @function referenceCount\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         */\r\n        referenceCount: function(id) {\r\n          var status = statusesMeta[id];\r\n          return status === undefined ? 0 : status.references;\r\n        },\r\n\r\n        /**\r\n         * Returns `true` if `#get(id)` is exactly equal (`===`) to `value` param.\r\n         *\r\n         * @param  {string} id The unique name of this state\r\n         * @param  {any} value The value for comparison\r\n         * @returns {bool} \r\n         * \r\n         * @function equals\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         */\r\n        equals: function(id, value) {\r\n          return this.get(id) === value;\r\n        },\r\n\r\n\r\n        /**\r\n         * Alias for `#equals`\r\n         * \r\n         * @param  {string} id The unique name of this state\r\n         * @param  {any} value The value for comparison\r\n         * @returns {bool} \r\n         * \r\n         * @function eq\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         * @alias mobile-angular-ui.core.sharedState~SharedState.equals\r\n         */\r\n        eq: function(id, value) {\r\n          return this.equals(id, value);\r\n        },\r\n\r\n        /**\r\n         * Returns an object with all the status values currently stored. \r\n         * It has the form of `{statusId: statusValue}`.\r\n         * \r\n         * Bear in mind that in order to spare resources it currently \r\n         * returns just the internal object retaining statuses values. \r\n         * Thus it is not intended to be modified and direct changes to it will be not tracked or notified.\r\n         * \r\n         * Just clone before apply any change to it.\r\n         * \r\n         * @returns {object}\r\n         * \r\n         * @function values\r\n         * @memberOf mobile-angular-ui.core.sharedState~SharedState\r\n         */\r\n        values: function() {\r\n          return values;\r\n        }\r\n  \r\n      };\r\n    }\r\n  ]);\r\n\r\n  var uiBindEvent = function(scope, element, eventNames, fn){\r\n    eventNames = eventNames || 'click tap';\r\n    element.on(eventNames, function(event){\r\n      scope.$apply(function() {\r\n        fn(scope, {$event:event});\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Calls `SharedState#initialize` on the scope relative to the element using it.\r\n   * \r\n   * @param {string} uiState The shared state id\r\n   * @param {expression} [uiDefault] the default value\r\n   * \r\n   * @directive uiState\r\n   */\r\n  module.directive('uiState', [\r\n    'SharedState',\r\n    function(SharedState){\r\n      return {\r\n        restrict: 'EA',\r\n        priority: 601, // more than ng-if\r\n        link: function(scope, elem, attrs){\r\n          var id               = attrs.uiState || attrs.id,\r\n              defaultValueExpr = attrs.uiDefault || attrs['default'],\r\n              defaultValue     = defaultValueExpr ? scope.$eval(defaultValueExpr) : undefined;\r\n\r\n          SharedState.initialize(scope, id, {\r\n            defaultValue: defaultValue,\r\n            exclusionGroup: attrs.uiExclusionGroup\r\n          });\r\n        }\r\n      };\r\n    }\r\n  ]);\r\n\r\n  angular.forEach(['toggle', 'turnOn', 'turnOff', 'set'], \r\n    function(methodName){\r\n      var directiveName = 'ui' + methodName[0].toUpperCase() + methodName.slice(1);\r\n\r\n      /**\r\n       * Calls `SharedState#toggle` when triggering events happens on the element using it.\r\n       * \r\n       * @param {object} uiToggle the target shared state\r\n       * @param {expression} uiDefault the default value\r\n       *\r\n       * @directive uiToggle\r\n       */\r\n      \r\n      /**\r\n       * @function uiTurnOn\r\n       * \r\n       * @description\r\n       * Calls `SharedState#turnOn` when triggering events happens on the element using it.\r\n       * \r\n       * @ngdoc directive\r\n       * \r\n       * @param {object} uiTurnOn the target shared state\r\n       * @param {expression} uiDefault the default value\r\n       */\r\n\r\n      /**\r\n       * @function uiTurnOff\r\n       * \r\n       * @description\r\n       * Calls `SharedState#turnOff` when triggering events happens on the element using it.\r\n       * \r\n       * @ngdoc directive\r\n       * \r\n       * @param {object} uiTurnOff the target shared state\r\n       * @param {string} [uiTriggers='click tap'] the event triggering the call.\r\n       */\r\n\r\n      /**\r\n       * @function uiSet\r\n       * \r\n       * @description\r\n       * Calls `SharedState#set` when triggering events happens on the element using it.\r\n       * \r\n       * @ngdoc directive\r\n       * \r\n       * @param {object} uiSet The object to pass to SharedState#set\r\n       * @param {string} [uiTriggers='click tap'] the event triggering the call.\r\n       */\r\n      \r\n      module.directive(directiveName, [\r\n        '$parse',\r\n        'SharedState',\r\n        function($parse, SharedState) {\r\n              var method = SharedState[methodName];\r\n              return {\r\n                restrict: 'A',\r\n                priority: 1, // This would make postLink calls happen after ngClick \r\n                             // (and similar) ones, thus intercepting events after them.\r\n                             // \r\n                             // This will prevent eventual ng-if to detach elements \r\n                             // before ng-click fires.\r\n\r\n                compile: function(elem, attrs) {\r\n                  var fn = methodName === 'set' ?\r\n                    $parse(attrs[directiveName]) :\r\n                      function() {\r\n                        return attrs[directiveName]; \r\n                      };\r\n\r\n                  return function(scope, elem, attrs) {\r\n                    var callback = function() {\r\n                      var arg = fn(scope);\r\n                      return method.call(SharedState, arg);\r\n                    };\r\n                    uiBindEvent(scope, elem, attrs.uiTriggers, callback);\r\n                  };\r\n                }\r\n              };\r\n            }\r\n      ]);\r\n    });\r\n\r\n /**\r\n  * @name uiScopeContext\r\n  * @inner \r\n  * @description\r\n  * \r\n  * `uiScopeContext` is not a directive, but a parameter common to any of the following `ui-*` directives.\r\n  * \r\n  * It allows to use current scope vars inside ui-* conditions. That will leave other scope vars (or the entire scope if not present) apart from the condition evaluation process.\r\n  * \r\n  * Hopefully this will keep evaluation running against a flat and small data structure instead of taking into account the whole scope. \r\n  * \r\n  * It is a list `scopeVar[ as aliasName] [, ...]` specifing one of more scope variables to take into account when evaluating conditions. ie:\r\n  * \r\n  * ``` html\r\n  * <!-- use item from ng-repeat -->\r\n  * <div ui-if=\"openPanel == i\" ui-scope-context='i' ng-repeat=\"i in [1,2,3]\">\r\n  *   <div class=\"panel-body\">\r\n  *     <!-- ... -->\r\n  *   </div>\r\n  * </div>\r\n  * ```\r\n  * \r\n  * ``` html\r\n  * <div ui-if=\"sharedState1 == myVar1 && sharedState2 == myVar2\"\r\n  *   ui-scope-context=\"myVar1, myVar2\"\r\n  * >\r\n  * </div>\r\n  * ```\r\n  * \r\n  * Be aware that scope vars will take precedence over sharedStates so,\r\n  * in order to avoid name clashes you can use 'as' to refer to scope vars\r\n  * with a different name in conditions:\r\n  * \r\n  * ``` html\r\n  * <div ui-if=\"x == myVar1 && y == myVar2\"\r\n  *   ui-scope-context=\"x as myVar1, y as myVar2\"\r\n  * >\r\n  * </div>\r\n  * ```\r\n  */\r\n  var parseScopeContext = function(attr) {\r\n    if (!attr || attr === '') {\r\n      return [];\r\n    }\r\n    var vars = attr ? attr.trim().split(/ *, */) : [];\r\n    var res = [];\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var item = vars[i].split(/ *as */);\r\n      if (item.length > 2 || item.length < 1) {\r\n        throw new Error('Error parsing uiScopeContext=\"' + attr + '\"');\r\n      }\r\n      res.push(item);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  var mixScopeContext = function(context, scopeVars, scope) {\r\n    for (var i = 0; i < scopeVars.length; i++) {\r\n      var key = scopeVars[i][0];\r\n      var alias = scopeVars[i][1] || key;\r\n      context[alias] = scope[key];\r\n    }\r\n  };\r\n\r\n  var parseUiCondition = function(name, attrs, $scope, SharedState, $parse) {\r\n    var exprFn = $parse(attrs[name]);\r\n    var uiScopeContext = parseScopeContext(attrs.uiScopeContext);\r\n    return function() {\r\n      var context;\r\n      if (uiScopeContext.length) {\r\n        context = angular.extend({}, SharedState.values());\r\n        mixScopeContext(context, uiScopeContext, $scope);  \r\n      } else {\r\n        context = SharedState.values();\r\n      }\r\n      return exprFn(context);\r\n    };\r\n  };\r\n\r\n  \r\n /**\r\n  * @ngdoc directive\r\n  * @function uiIf\r\n  * \r\n  * @description \r\n  * Same as `ngIf` but evaluates condition against `SharedState` statuses too\r\n  * \r\n  * @param {expression} uiIf A condition to decide wether to attach the element to the dom\r\n  * @param {list} [uiScopeContext] A list `scopeVar[ as aliasName] [, ...]` specifing one of more scope variables to take into account when evaluating condition.\r\n  */ \r\n  module.directive('uiIf', ['$animate', 'SharedState', '$parse', function($animate, SharedState, $parse) {\r\n    function getBlockNodes(nodes) {\r\n      var node = nodes[0];\r\n      var endNode = nodes[nodes.length - 1];\r\n      var blockNodes = [node];\r\n      do {\r\n        node = node.nextSibling;\r\n        if (!node) { break; }\r\n        blockNodes.push(node);\r\n      } while (node !== endNode);\r\n\r\n      return angular.element(blockNodes);\r\n    }\r\n\r\n    return {\r\n      multiElement: true,\r\n      transclude: 'element',\r\n      priority: 600,\r\n      terminal: true,\r\n      restrict: 'A',\r\n      $$tlb: true,\r\n      link: function ($scope, $element, $attr, ctrl, $transclude) {\r\n          var block, childScope, previousElements, \r\n          uiIfFn = parseUiCondition('uiIf', $attr, $scope, SharedState, $parse);\r\n\r\n          $scope.$watch(uiIfFn, function uiIfWatchAction(value) {\r\n            if (value) {\r\n              if (!childScope) {\r\n                $transclude(function (clone, newScope) {\r\n                  childScope = newScope;\r\n                  clone[clone.length++] = document.createComment(' end uiIf: ' + $attr.uiIf + ' ');\r\n                  // Note: We only need the first/last node of the cloned nodes.\r\n                  // However, we need to keep the reference to the jqlite wrapper as it might be changed later\r\n                  // by a directive with templateUrl when its template arrives.\r\n                  block = {\r\n                    clone: clone\r\n                  };\r\n                  $animate.enter(clone, $element.parent(), $element);\r\n                });\r\n              }\r\n            } else {\r\n              if (previousElements) {\r\n                previousElements.remove();\r\n                previousElements = null;\r\n              }\r\n              if (childScope) {\r\n                childScope.$destroy();\r\n                childScope = null;\r\n              }\r\n              if (block) {\r\n                previousElements = getBlockNodes(block.clone);\r\n                var done = function() {\r\n                  previousElements = null;\r\n                };\r\n                var nga = $animate.leave(previousElements, done);\r\n                if (nga) {\r\n                  nga.then(done);\r\n                }\r\n                block = null;\r\n              }\r\n            }\r\n          });\r\n      }\r\n    };\r\n  }]);\r\n\r\n  \r\n  /**\r\n   * @ngdoc directive \r\n   * @function uiHide\r\n   * \r\n   * @description\r\n   * Same as `ngHide` but evaluates condition against `SharedState` statuses\r\n   * \r\n   * @param {expression} uiShow A condition to decide wether to hide the element\r\n   * @param {list} [uiScopeContext] A list `scopeVar[ as aliasName] [, ...]` specifing one of more scope variables to take into account when evaluating condition.\r\n   */ \r\n  module.directive('uiHide', ['$animate', 'SharedState', '$parse', function($animate, SharedState, $parse) {\r\n    var NG_HIDE_CLASS = 'ng-hide';\r\n    var NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';\r\n\r\n    return {\r\n      restrict: 'A',\r\n      multiElement: true,\r\n      link: function(scope, element, attr) {\r\n        var uiHideFn = parseUiCondition('uiHide', attr, scope, SharedState, $parse);\r\n        scope.$watch(uiHideFn, function uiHideWatchAction(value){\r\n          $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {\r\n            tempClasses : NG_HIDE_IN_PROGRESS_CLASS\r\n          });\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\r\n  /**\r\n   * @ngdoc directive \r\n   * @function uiShow\r\n   * \r\n   * @description\r\n   * Same as `ngShow` but evaluates condition against `SharedState` statuses\r\n   * \r\n   * @param {expression} uiShow A condition to decide wether to show the element\r\n   * @param {list} [uiScopeContext] A list `scopeVar[ as aliasName] [, ...]` specifing one of more scope variables to take into account when evaluating condition.\r\n   */ \r\n  module.directive('uiShow', ['$animate', 'SharedState', '$parse', function($animate, SharedState, $parse) {\r\n    var NG_HIDE_CLASS = 'ng-hide';\r\n    var NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';\r\n\r\n    return {\r\n      restrict: 'A',\r\n      multiElement: true,\r\n      link: function(scope, element, attr) {\r\n        var uiShowFn = parseUiCondition('uiShow', attr, scope, SharedState, $parse);\r\n        scope.$watch(uiShowFn, function uiShowWatchAction(value){\r\n          $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {\r\n            tempClasses : NG_HIDE_IN_PROGRESS_CLASS\r\n          });\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\r\n  /**\r\n   * @ngdoc directive \r\n   * @function uiClass\r\n   * \r\n   * @description\r\n   * A simplified version of `ngClass` that evaluates in context of `SharedState`, it only suppors the `{'className': expr}` syntax.\r\n   * \r\n   * @param {expression} uiClass An expression that has to evaluate to an object of the form `{'className': expr}`, where `expr` decides wether the class should appear to element's class list.\r\n   * @param {list} [uiScopeContext] A list `scopeVar[ as aliasName] [, ...]` specifing one of more scope variables to take into account when evaluating condition.\r\n   */ \r\n  module.directive('uiClass', ['SharedState', '$parse', function(SharedState, $parse) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function(scope, element, attr) {\r\n        var uiClassFn = parseUiCondition('uiClass', attr, scope, SharedState, $parse);\r\n        scope.$watch(uiClassFn, function uiClassWatchAction(value){\r\n          var classesToAdd = '';\r\n          var classesToRemove = '';\r\n          angular.forEach(value, function(expr, className) {\r\n            if (expr) {\r\n              classesToAdd += ' ' + className;\r\n            } \r\n            else {\r\n              classesToRemove += ' ' + className;\r\n            }\r\n            if (classesToAdd.length) {\r\n              element.addClass(classesToAdd);  \r\n            }\r\n            if (classesToRemove.length) {\r\n              element.removeClass(classesToRemove);\r\n            }\r\n          });\r\n        }, true);\r\n      }\r\n    };\r\n  }]);\r\n\r\n  module.run([\r\n    '$rootScope',\r\n    'SharedState',\r\n    function($rootScope, SharedState){\r\n      $rootScope.Ui = SharedState;\r\n    }\r\n  ]);\r\n\r\n\r\n}());\r\n","/**\r\n\r\n@module mobile-angular-ui.core\r\n\r\n@description\r\n\r\nIt has all the core functionalities of Mobile Angular UI. It aims to act as a common base \r\nfor an UI framework providing services and directives to create components and implement \r\nUI interactions with angular.\r\n\r\n<div class=\"alert alert-success\">\r\n  <b>NOTE</b>\r\n  <ul>\r\n    <li>It has no dependency on Bootstrap.</li>\r\n    <li>It is not related to mobile apps only.</li>\r\n    <li>It is not requiring CSS support.</li>\r\n    <li><b>You can use it on any Angular Application and with any CSS framework.</b></li>\r\n  </ul>\r\n</div>\r\n\r\n## Standalone Usage\r\n\r\nAlthough `.core` module is required by `mobile-angular-ui` by default you can use it alone.\r\n\r\n``` js\r\nangular.module('myApp', ['mobile-angular-ui.core']);\r\n```\r\n\r\n*/\r\n(function () {\r\n  'use strict';\r\n  angular.module('mobile-angular-ui.core', [\r\n    'mobile-angular-ui.core.fastclick',\r\n    'mobile-angular-ui.core.activeLinks',\r\n    'mobile-angular-ui.core.capture',\r\n    'mobile-angular-ui.core.outerClick',\r\n    'mobile-angular-ui.core.sharedState',\r\n    'mobile-angular-ui.core.nobounce'\r\n  ]);\r\n}());","/*! Overthrow. An overflow:auto polyfill for responsive design. (c) 2012: Scott Jehl, Filament Group, Inc. http://filamentgroup.github.com/Overthrow/license.txt */\n(function( w, undefined ){\n\t\n\tvar doc = w.document,\n\t\tdocElem = doc.documentElement,\n\t\tenabledClassName = \"overthrow-enabled\",\n\n\t\t// Touch events are used in the polyfill, and thus are a prerequisite\n\t\tcanBeFilledWithPoly = \"ontouchmove\" in doc,\n\t\t\n\t\t// The following attempts to determine whether the browser has native overflow support\n\t\t// so we can enable it but not polyfill\n\t\tnativeOverflow = \n\t\t\t// Features-first. iOS5 overflow scrolling property check - no UA needed here. thanks Apple :)\n\t\t\t\"WebkitOverflowScrolling\" in docElem.style ||\n\t\t\t// Test the windows scrolling property as well\n\t\t\t\"msOverflowStyle\" in docElem.style ||\n\t\t\t// Touch events aren't supported and screen width is greater than X\n\t\t\t// ...basically, this is a loose \"desktop browser\" check. \n\t\t\t// It may wrongly opt-in very large tablets with no touch support.\n\t\t\t( !canBeFilledWithPoly && w.screen.width > 800 ) ||\n\t\t\t// Hang on to your hats.\n\t\t\t// Whitelist some popular, overflow-supporting mobile browsers for now and the future\n\t\t\t// These browsers are known to get overlow support right, but give us no way of detecting it.\n\t\t\t(function(){\n\t\t\t\tvar ua = w.navigator.userAgent,\n\t\t\t\t\t// Webkit crosses platforms, and the browsers on our list run at least version 534\n\t\t\t\t\twebkit = ua.match( /AppleWebKit\\/([0-9]+)/ ),\n\t\t\t\t\twkversion = webkit && webkit[1],\n\t\t\t\t\twkLte534 = webkit && wkversion >= 534;\n\t\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t/* Android 3+ with webkit gte 534\n\t\t\t\t\t~: Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13 */\n\t\t\t\t\tua.match( /Android ([0-9]+)/ ) && RegExp.$1 >= 3 && wkLte534 ||\n\t\t\t\t\t/* Blackberry 7+ with webkit gte 534\n\t\t\t\t\t~: Mozilla/5.0 (BlackBerry; U; BlackBerry 9900; en-US) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.0.0 Mobile Safari/534.11+ */\n\t\t\t\t\tua.match( / Version\\/([0-9]+)/ ) && RegExp.$1 >= 0 && w.blackberry && wkLte534 ||\n\t\t\t\t\t/* Blackberry Playbook with webkit gte 534\n\t\t\t\t\t~: Mozilla/5.0 (PlayBook; U; RIM Tablet OS 1.0.0; en-US) AppleWebKit/534.8+ (KHTML, like Gecko) Version/0.0.1 Safari/534.8+ */   \n\t\t\t\t\tua.indexOf( \"PlayBook\" ) > -1 && wkLte534 && !ua.indexOf( \"Android 2\" ) === -1 ||\n\t\t\t\t\t/* Firefox Mobile (Fennec) 4 and up\n\t\t\t\t\t~: Mozilla/5.0 (Mobile; rv:15.0) Gecko/15.0 Firefox/15.0 */\n\t\t\t\t\tua.match(/Firefox\\/([0-9]+)/) && RegExp.$1 >= 4 ||\n\t\t\t\t\t/* WebOS 3 and up (TouchPad too)\n\t\t\t\t\t~: Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.48 Safari/534.6 TouchPad/1.0 */\n\t\t\t\t\tua.match( /wOSBrowser\\/([0-9]+)/ ) && RegExp.$1 >= 233 && wkLte534 ||\n\t\t\t\t\t/* Nokia Browser N8\n\t\t\t\t\t~: Mozilla/5.0 (Symbian/3; Series60/5.2 NokiaN8-00/012.002; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/533.4 (KHTML, like Gecko) NokiaBrowser/7.3.0 Mobile Safari/533.4 3gpp-gba \n\t\t\t\t\t~: Note: the N9 doesn't have native overflow with one-finger touch. wtf */\n\t\t\t\t\tua.match( /NokiaBrowser\\/([0-9\\.]+)/ ) && parseFloat(RegExp.$1) === 7.3 && webkit && wkversion >= 533\n\t\t\t\t);\n\t\t\t})();\n\n\t// Expose overthrow API\n\tw.overthrow = {};\n\n\tw.overthrow.enabledClassName = enabledClassName;\n\n\tw.overthrow.addClass = function(){\n\t\tif( docElem.className.indexOf( w.overthrow.enabledClassName ) === -1 ){\n\t\t\tdocElem.className += \" \" + w.overthrow.enabledClassName;\n\t\t}\n\t};\n\n\tw.overthrow.removeClass = function(){\n\t\tdocElem.className = docElem.className.replace( w.overthrow.enabledClassName, \"\" );\n\t};\n\n\t// Enable and potentially polyfill overflow\n\tw.overthrow.set = function(){\n\t\t\t\n\t\t// If nativeOverflow or at least the element canBeFilledWithPoly, add a class to cue CSS that assumes overflow scrolling will work (setting height on elements and such)\n\t\tif( nativeOverflow ){\n\t\t\tw.overthrow.addClass();\n\t\t}\n\n\t};\n\n\t// expose polyfillable \n\tw.overthrow.canBeFilledWithPoly = canBeFilledWithPoly;\n\n\t// Destroy everything later. If you want to.\n\tw.overthrow.forget = function(){\n\n\t\tw.overthrow.removeClass();\n\t\t\n\t};\n\t\t\n\t// Expose overthrow API\n\tw.overthrow.support = nativeOverflow ? \"native\" : \"none\";\n\t\t\n})( this );\n","/*! Overthrow. An overflow:auto polyfill for responsive design. (c) 2012: Scott Jehl, Filament Group, Inc. http://filamentgroup.github.com/Overthrow/license.txt */\n(function( w, undefined ){\n\t\n\t// Auto-init\n\tw.overthrow.set();\n\n}( this ));","/*! Overthrow. An overflow:auto polyfill for responsive design. (c) 2012: Scott Jehl, Filament Group, Inc. http://filamentgroup.github.com/Overthrow/license.txt */\n(function( w, o, undefined ){\n\n\t// o is overthrow reference from overthrow-polyfill.js\n\tif( o === undefined ){\n\t\treturn;\n\t}\n\n\to.scrollIndicatorClassName = \"overthrow\";\n\t\n\tvar doc = w.document,\n\t\tdocElem = doc.documentElement,\n\t\t// o api\n\t\tnativeOverflow = o.support === \"native\",\n\t\tcanBeFilledWithPoly = o.canBeFilledWithPoly,\n\t\tconfigure = o.configure,\n\t\tset = o.set,\n\t\tforget = o.forget,\n\t\tscrollIndicatorClassName = o.scrollIndicatorClassName;\n\n\t// find closest overthrow (elem or a parent)\n\to.closest = function( target, ascend ){\n\t\treturn !ascend && target.className && target.className.indexOf( scrollIndicatorClassName ) > -1 && target || o.closest( target.parentNode );\n\t};\n\t\t\n\t// polyfill overflow\n\tvar enabled = false;\n\to.set = function(){\n\t\t\t\n\t\tset();\n\n\t\t// If nativeOverflow or it doesn't look like the browser canBeFilledWithPoly, our job is done here. Exit viewport left.\n\t\tif( enabled || nativeOverflow || !canBeFilledWithPoly ){\n\t\t\treturn;\n\t\t}\n\n\t\tw.overthrow.addClass();\n\n\t\tenabled = true;\n\n\t\to.support = \"polyfilled\";\n\n\t\to.forget = function(){\n\t\t\tforget();\n\t\t\tenabled = false;\n\t\t\t// Remove touch binding (check for method support since this part isn't qualified by touch support like the rest)\n\t\t\tif( doc.removeEventListener ){\n\t\t\t\tdoc.removeEventListener( \"touchstart\", start, false );\n\t\t\t}\n\t\t};\n\n\t\t// Fill 'er up!\n\t\t// From here down, all logic is associated with touch scroll handling\n\t\t\t// elem references the overthrow element in use\n\t\tvar elem,\n\t\t\t\n\t\t\t// The last several Y values are kept here\n\t\t\tlastTops = [],\n\t\n\t\t\t// The last several X values are kept here\n\t\t\tlastLefts = [],\n\t\t\t\n\t\t\t// lastDown will be true if the last scroll direction was down, false if it was up\n\t\t\tlastDown,\n\t\t\t\n\t\t\t// lastRight will be true if the last scroll direction was right, false if it was left\n\t\t\tlastRight,\n\t\t\t\n\t\t\t// For a new gesture, or change in direction, reset the values from last scroll\n\t\t\tresetVertTracking = function(){\n\t\t\t\tlastTops = [];\n\t\t\t\tlastDown = null;\n\t\t\t},\n\t\t\t\n\t\t\tresetHorTracking = function(){\n\t\t\t\tlastLefts = [];\n\t\t\t\tlastRight = null;\n\t\t\t},\n\t\t\n\t\t\t// On webkit, touch events hardly trickle through textareas and inputs\n\t\t\t// Disabling CSS pointer events makes sure they do, but it also makes the controls innaccessible\n\t\t\t// Toggling pointer events at the right moments seems to do the trick\n\t\t\t// Thanks Thomas Bachem http://stackoverflow.com/a/5798681 for the following\n\t\t\tinputs,\n\t\t\tsetPointers = function( val ){\n\t\t\t\tinputs = elem.querySelectorAll( \"textarea, input\" );\n\t\t\t\tfor( var i = 0, il = inputs.length; i < il; i++ ) {\n\t\t\t\t\tinputs[ i ].style.pointerEvents = val;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// For nested overthrows, changeScrollTarget restarts a touch event cycle on a parent or child overthrow\n\t\t\tchangeScrollTarget = function( startEvent, ascend ){\n\t\t\t\tif( doc.createEvent ){\n\t\t\t\t\tvar newTarget = ( !ascend || ascend === undefined ) && elem.parentNode || elem.touchchild || elem,\n\t\t\t\t\t\ttEnd;\n\t\t\t\t\t\t\t\n\t\t\t\t\tif( newTarget !== elem ){\n\t\t\t\t\t\ttEnd = doc.createEvent( \"HTMLEvents\" );\n\t\t\t\t\t\ttEnd.initEvent( \"touchend\", true, true );\n\t\t\t\t\t\telem.dispatchEvent( tEnd );\n\t\t\t\t\t\tnewTarget.touchchild = elem;\n\t\t\t\t\t\telem = newTarget;\n\t\t\t\t\t\tnewTarget.dispatchEvent( startEvent );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// Touchstart handler\n\t\t\t// On touchstart, touchmove and touchend are freshly bound, and all three share a bunch of vars set by touchstart\n\t\t\t// Touchend unbinds them again, until next time\n\t\t\tstart = function( e ){\n\n\t\t\t\t// Stop any throw in progress\n\t\t\t\tif( o.intercept ){\n\t\t\t\t\to.intercept();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Reset the distance and direction tracking\n\t\t\t\tresetVertTracking();\n\t\t\t\tresetHorTracking();\n\t\t\t\t\n\t\t\t\telem = o.closest( e.target );\n\t\t\t\t\t\n\t\t\t\tif( !elem || elem === docElem || e.touches.length > 1 ){\n\t\t\t\t\treturn;\n\t\t\t\t}\t\t\t\n\n\t\t\t\tsetPointers( \"none\" );\n\t\t\t\tvar touchStartE = e,\n\t\t\t\t\tscrollT = elem.scrollTop,\n\t\t\t\t\tscrollL = elem.scrollLeft,\n\t\t\t\t\theight = elem.offsetHeight,\n\t\t\t\t\twidth = elem.offsetWidth,\n\t\t\t\t\tstartY = e.touches[ 0 ].pageY,\n\t\t\t\t\tstartX = e.touches[ 0 ].pageX,\n\t\t\t\t\tscrollHeight = elem.scrollHeight,\n\t\t\t\t\tscrollWidth = elem.scrollWidth,\n\t\t\t\t\n\t\t\t\t\t// Touchmove handler\n\t\t\t\t\tmove = function( e ){\n\t\t\t\t\t\n\t\t\t\t\t\tvar ty = scrollT + startY - e.touches[ 0 ].pageY,\n\t\t\t\t\t\t\ttx = scrollL + startX - e.touches[ 0 ].pageX,\n\t\t\t\t\t\t\tdown = ty >= ( lastTops.length ? lastTops[ 0 ] : 0 ),\n\t\t\t\t\t\t\tright = tx >= ( lastLefts.length ? lastLefts[ 0 ] : 0 );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// If there's room to scroll the current container, prevent the default window scroll\n\t\t\t\t\t\tif( ( ty > 0 && ty < scrollHeight - height ) || ( tx > 0 && tx < scrollWidth - width ) ){\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// This bubbling is dumb. Needs a rethink.\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchangeScrollTarget( touchStartE );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If down and lastDown are inequal, the y scroll has changed direction. Reset tracking.\n\t\t\t\t\t\tif( lastDown && down !== lastDown ){\n\t\t\t\t\t\t\tresetVertTracking();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If right and lastRight are inequal, the x scroll has changed direction. Reset tracking.\n\t\t\t\t\t\tif( lastRight && right !== lastRight ){\n\t\t\t\t\t\t\tresetHorTracking();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// remember the last direction in which we were headed\n\t\t\t\t\t\tlastDown = down;\n\t\t\t\t\t\tlastRight = right;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t// set the container's scroll\n\t\t\t\t\t\telem.scrollTop = ty;\n\t\t\t\t\t\telem.scrollLeft = tx;\n\t\t\t\t\t\n\t\t\t\t\t\tlastTops.unshift( ty );\n\t\t\t\t\t\tlastLefts.unshift( tx );\n\t\t\t\t\t\n\t\t\t\t\t\tif( lastTops.length > 3 ){\n\t\t\t\t\t\t\tlastTops.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( lastLefts.length > 3 ){\n\t\t\t\t\t\t\tlastLefts.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\t// Touchend handler\n\t\t\t\t\tend = function( e ){\n\n\t\t\t\t\t\t// Bring the pointers back\n\t\t\t\t\t\tsetPointers( \"auto\" );\n\t\t\t\t\t\tsetTimeout( function(){\n\t\t\t\t\t\t\tsetPointers( \"none\" );\n\t\t\t\t\t\t}, 450 );\n\t\t\t\t\t\telem.removeEventListener( \"touchmove\", move, false );\n\t\t\t\t\t\telem.removeEventListener( \"touchend\", end, false );\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\telem.addEventListener( \"touchmove\", move, false );\n\t\t\t\telem.addEventListener( \"touchend\", end, false );\n\t\t\t};\n\t\t\t\n\t\t// Bind to touch, handle move and end within\n\t\tdoc.addEventListener( \"touchstart\", start, false );\n\t};\n\t\t\n})( this, this.overthrow );\n","/**\r\n * This module will provide directives to create modals and overlays components.\r\n * \r\n * @module mobile-angular-ui.components.modals\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular.module('mobile-angular-ui.components.modals', [])\r\n\r\n  /**\r\n   * A directive to create modals and overlays components.\r\n   * \r\n   * Modals are basically the same of Bootstrap 3 but you have to use uiState \r\n   * with `ngIf/uiIf` or `ngHide/uiHide` to `activate/dismiss` it.\r\n   * \r\n   * By default both modals and overlay are made always showing up by \r\n   * css rule `.modal {display:block}`, so you can use it with \r\n   * `ngAnimate` and other angular directives in a simpler way.\r\n   *\r\n   * Overlay are a style of modal that looks more native in mobile devices providing a blurred\r\n   * overlay as background.\r\n   * \r\n   * You can create an overlay adding `.modal-overlay` class to a modal.\r\n   * \r\n   * ### Note\r\n   * \r\n   * For modals and overlays to cover the entire page you have to attach them \r\n   * as child of `body` element. To achieve this from a view is a common use for\r\n   * `contentFor/yieldTo` directives contained from \r\n   * [capture module](/docs/module:mobile-angular-ui/module:core/module:capture):\r\n   * \r\n   * ``` html\r\n   * <body ng-app=\"myApp\">\r\n   * \r\n   *   <!-- ... -->\r\n   *   <!-- Modals and Overlays -->\r\n   *   <div ui-yield-to=\"modals\"></div>\r\n   * \r\n   * </body>\r\n   * ```\r\n   * \r\n   * Then you can wrap your modals and overlays in `contentFor`:\r\n   * \r\n   * ``` html\r\n   * <div ui-content-for=\"modals\">\r\n   * * <div class=\"modal\"><!-- ... --></div>\r\n   * </div>\r\n   * ```\r\n   * \r\n   * ##### Example. Create a Modal.\r\n   * \r\n   * ``` html\r\n   * <div ui-content-for=\"modals\">\r\n   *   <div class=\"modal\" ui-if=\"modal1\" ui-state='modal1'>\r\n   *     <div class=\"modal-backdrop in\"></div>\r\n   *     <div class=\"modal-dialog\">\r\n   *       <div class=\"modal-content\">\r\n   *         <div class=\"modal-header\">\r\n   *           <button class=\"close\" \r\n   *                   ui-turn-off=\"modal1\">&times;</button>\r\n   *           <h4 class=\"modal-title\">Modal title</h4>\r\n   *         </div>\r\n   *         <div class=\"modal-body\">\r\n   *           <p>Lorem ipsum ...</p>\r\n   *         </div>\r\n   *         <div class=\"modal-footer\">\r\n   *           <button ui-turn-off=\"modal1\" class=\"btn btn-default\">Close</button>\r\n   *           <button ui-turn-off=\"modal1\" class=\"btn btn-primary\">Save changes</button>\r\n   *         </div>\r\n   *       </div>\r\n   *     </div>\r\n   *   </div>\r\n   * </div>\r\n   * ```\r\n   * \r\n   * ##### Example. Create an Overlay.\r\n   * \r\n   * ``` html\r\n   * <div ui-content-for=\"modals\">\r\n   *   <div class=\"modal modal-overlay\" ui-if='modal2' ui-state='modal2'>\r\n   *     <div class=\"modal-dialog\">\r\n   *       <div class=\"modal-content\">\r\n   *         <div class=\"modal-header\">\r\n   *           <button class=\"close\"\r\n   *                   ui-turn-off=\"modal2\">&times;</button>\r\n   *           <h4 class=\"modal-title\">Modal title</h4>\r\n   *         </div>\r\n   *         <div class=\"modal-body\">\r\n   *           <p>Lorem ipsum ...</p>\r\n   *         </div>\r\n   *         <div class=\"modal-footer\">\r\n   *           <button ui-turn-off=\"modal2\" class=\"btn btn-default\">Close</button>\r\n   *           <button ui-turn-off=\"modal2\" class=\"btn btn-primary\">Save changes</button>\r\n   *         </div>\r\n   *       </div>\r\n   *     </div>\r\n   *   </div>\r\n   * </div>\r\n   * ```\r\n   * \r\n   * @directive modal\r\n   * @restrict C\r\n   */\r\n  .directive('modal', [\r\n    '$rootElement',\r\n    function($rootElement) {\r\n      return {\r\n        restrict: 'C',\r\n        link: function(scope, elem) {\r\n          $rootElement.addClass('has-modal');\r\n          elem.on('$destroy', function(){\r\n            $rootElement.removeClass('has-modal');\r\n          });\r\n          scope.$on('$destroy', function(){\r\n            $rootElement.removeClass('has-modal');\r\n          });\r\n\r\n          if (elem.hasClass('modal-overlay')) {\r\n            $rootElement.addClass('has-modal-overlay');\r\n            elem.on('$destroy', function(){\r\n              $rootElement.removeClass('has-modal-overlay');\r\n            });\r\n            scope.$on('$destroy', function(){\r\n              $rootElement.removeClass('has-modal-overlay');\r\n            });            \r\n          }\r\n        }\r\n      };\r\n  }]);\r\n}());","/** \r\n * @module mobile-angular-ui.components.navbars \r\n * @description\r\n * \r\n * Bootstrap default navbars are awesome for responsive websites, but are not the\r\n * best with a small screen. Also fixed positioning is yet not an option to create\r\n * navbars standing in top or bottom of the screen.\r\n * \r\n * Mobile Angular Ui offers an alternative to bootstrap navbars that is more\r\n * suitable for mobile.\r\n * \r\n * It uses scrollable areas to avoid scroll issues. In the following figure you can\r\n * see the difference between fixed navbars and navbars with absolute positioning.\r\n * \r\n * <figure class=\"full-width-figure\">\r\n *   <img src=\"/assets/img/figs/fixed-overflow.png\" alt=\"\"/>\r\n * </figure>\r\n * \r\n * Here is the basic markup to achieve this.\r\n * \r\n * ``` html\r\n * <div class=\"app\">\r\n *   <div class=\"navbar navbar-app navbar-absolute-top\">\r\n *     <!-- ... -->\r\n *   </div>\r\n * \r\n *   <div class=\"navbar navbar-app navbar-absolute-bottom\">\r\n *     <!-- ... -->\r\n *   </div>\r\n * \r\n *   <div class=\"app-body\">\r\n *     <ng-view></ng-view>\r\n *   </div>\r\n * </div>\r\n * ```\r\n * \r\n * As you can notice the base class is `.navbar-app` while the positioning is\r\n * obtained adding either `.navbar-absolute-top` or `.navbar-absolute-bottom`\r\n * class.\r\n * \r\n * ### Mobile Navbar Layout\r\n * \r\n * Top navbar in mobile design most of the times follows a clear pattern: a\r\n * centered title surrounded by one or two action buttons, the _back_ or the\r\n * _menu_ buttons are two common examples.\r\n * \r\n * Twitter Bootstrap ships with a different arrangement of components for navbars\r\n * since they are supposed to host an horizontal navigation menu.\r\n * \r\n * `.navbar-app` is specifically designed to support this different type of\r\n * `.interaction and arrangement.\r\n * \r\n * Consider the following example:\r\n * \r\n * ``` html\r\n * <div class=\"navbar navbar-app navbar-absolute-top\">\r\n * \r\n *   <div class=\"navbar-brand navbar-brand-center\">\r\n *     Navbar Brand\r\n *   </div>\r\n * \r\n *   <div class=\"btn-group pull-left\">\r\n *     <div class=\"btn btn-navbar\">\r\n *       Left Action\r\n *     </div>\r\n *   </div>\r\n * \r\n *   <div class=\"btn-group pull-right\">\r\n *     <div class=\"btn btn-navbar\">\r\n *       Right Action\r\n *     </div>\r\n *   </div>\r\n * </div>\r\n * \r\n * ```\r\n * \r\n * `.navbar-brand-center` is a specialization of BS3's `.navbar-brand`.  It will\r\n * render the title centered and below the two button groups. Note that `.navbar-\r\n * brand-center` will position the title with absolute positioning ensuring that\r\n * it will never cover the buttons, which would cause interaction problems.\r\n * \r\n */\r\n\r\n(function() {\r\n  'use strict';\r\n\r\n  var module = angular.module('mobile-angular-ui.components.navbars', []);\r\n\r\n /** \r\n  * @directive navbarAbsoluteTop\r\n  * @restrict C\r\n  * @description\r\n  *\r\n  * Setup absolute positioned top navbar.\r\n  * \r\n  * ``` html\r\n  *  <div class=\"navbar navbar-app navbar-absolute-top\">\r\n  *    <!-- ... -->\r\n  *  </div>\r\n  * ``` \r\n  */\r\n\r\n /** \r\n  * @directive navbarAbsoluteBottom\r\n  * @restrict C\r\n  * @description\r\n  * \r\n  * Setup absolute positioned bottom navbar.\r\n  * \r\n  * ``` html\r\n  *  <div class=\"navbar navbar-app navbar-absolute-bottom\">\r\n  *    <!-- ... -->\r\n  *  </div>\r\n  * ``` \r\n  */\r\n  angular.forEach(['top', 'bottom'], function(side) {\r\n    var directiveName = 'navbarAbsolute' + side.charAt(0).toUpperCase() + side.slice(1);\r\n    module.directive(directiveName, [\r\n      '$rootElement',\r\n      function($rootElement) {\r\n        return {\r\n          restrict: 'C',\r\n          link: function(scope) {\r\n            $rootElement.addClass('has-navbar-' + side);\r\n            scope.$on('$destroy', function(){\r\n              $rootElement.removeClass('has-navbar-' + side);\r\n            });\r\n            }\r\n          };\r\n        }\r\n    ]);\r\n  });\r\n\r\n})();","/**  \r\n * @module mobile-angular-ui.components.scrollable\r\n * @description\r\n * \r\n * One thing you'll always have to deal with approaching mobile web app development is scroll and `position:fixed` bugs.\r\n * \r\n * Due to the lack of support in some devices fixed positioned elements may bounce or disappear during scroll. Also mobile interaction often leverages horizontal scroll eg. in carousels or sliders.\r\n * \r\n * We use `overflow:auto` to create scrollable areas and solve any problems related to scroll.\r\n * \r\n * Since `overflow:auto` is not always available in touch devices we use [Overthrow](http://filamentgroup.github.io/Overthrow/) to polyfill that.\r\n * \r\n * Markup for any scrollable areas is as simple as:\r\n * \r\n * ``` html\r\n * <div class=\"scrollable\">\r\n *   <div class=\"scrollable-content\">...</div>\r\n * </div>\r\n * ```\r\n * \r\n * This piece of code will trigger a directive that properly setup a new `Overthrow` instance for the `.scrollable` node.\r\n * \r\n * #### Headers and footers\r\n * \r\n * `.scrollable-header/.scrollable-footer` can be used to add fixed header/footer to a scrollable area without having to deal with css height and positioning to avoid breaking scroll.\r\n * \r\n * ``` html\r\n * <div class=\"scrollable\">\r\n *   <div class=\"scrollable-header\"><!-- ... --></div>\r\n *   <div class=\"scrollable-content\"><!-- ... --></div>\r\n *   <div class=\"scrollable-footer\"><!-- ... --></div>\r\n * </div>\r\n * ```\r\n * \r\n * #### scrollTo\r\n * \r\n * `.scrollable-content` controller exposes a `scrollTo` function: `scrollTo(offsetOrElement, margin)` \r\n * \r\n * You have to require it in your directives to use it or obtain through `element().controller`:\r\n * \r\n * ``` js\r\n * var elem = element(document.getElementById('myScrollableContent'));\r\n * var scrollableContentController = elem.controller('scrollableContent');\r\n * \r\n * // - Scroll to top of containedElement\r\n * scrollableContentController.scrollTo(containedElement);\r\n * \r\n * // - Scroll to top of containedElement with a margin of 10px;\r\n * scrollableContentController.scrollTo(containedElement, 10);\r\n * \r\n * // - Scroll top by 200px;\r\n * scrollableContentController.scrollTo(200);\r\n * ```\r\n * \r\n * #### `ui-scroll-bottom/ui-scroll-top`\r\n * \r\n * You can use `ui-scroll-bottom/ui-scroll-top` directives handle that events and implement features like _infinite scroll_.\r\n * \r\n * ``` html\r\n * <div class=\"scrollable\">\r\n *   <div class=\"scrollable-content section\" ui-scroll-bottom=\"loadMore()\">\r\n *     <ul>\r\n *       <li ng-repeat=\"item in items\">\r\n *         {{item.name}}\r\n *       </li>\r\n *     </ul>\r\n *   </div>\r\n * </div>\r\n * ```\r\n */\r\n(function() {\r\n  'use strict';\r\n  var module = angular.module('mobile-angular-ui.components.scrollable', \r\n    ['mobile-angular-ui.core.nobounce']);\r\n\r\n  module.directive('scrollableContent', function() {\r\n    return {\r\n      restrict: 'C',\r\n      controller: ['$element', 'allowTouchmoveDefault', function($element, allowTouchmoveDefault) {\r\n        var scrollableContent = $element[0],\r\n            scrollable = $element.parent()[0];\r\n\r\n        // Handle nobounce behaviour\r\n        if ('ontouchmove' in document) {\r\n          var allowUp, allowDown, prevTop, prevBot, lastY;\r\n          var setupTouchstart = function(event) {\r\n            allowUp = (scrollableContent.scrollTop > 0);\r\n            allowDown = (scrollableContent.scrollTop < scrollableContent.scrollHeight - scrollableContent.clientHeight);\r\n            prevTop = null; \r\n            prevBot = null;\r\n            lastY = event.pageY;\r\n          }\r\n\r\n          $element.on('touchstart', setupTouchstart);\r\n          $element.on('$destroy', function() {\r\n            $element.off('touchstart');\r\n          });\r\n\r\n          allowTouchmoveDefault($element, function(event) {\r\n            var up = (event.pageY > lastY), down = !up;\r\n            lastY = event.pageY;\r\n            return (up && allowUp) || (down && allowDown);\r\n          });\r\n        }\r\n\r\n        this.scrollableContent = scrollableContent;\r\n\r\n        this.scrollTo = function(elementOrNumber, marginTop) {\r\n          marginTop = marginTop || 0;\r\n\r\n          if (angular.isNumber(elementOrNumber)) {\r\n            scrollableContent.scrollTop = elementOrNumber - marginTop;\r\n          } else {\r\n            var target = angular.element(elementOrNumber)[0];\r\n            if ((! target.offsetParent) || target.offsetParent === scrollable) {\r\n              scrollableContent.scrollTop = target.offsetTop - marginTop;\r\n            } else {\r\n              // recursively subtract offsetTop from marginTop until it reaches scrollable element.\r\n              this.scrollTo(target.offsetParent, marginTop - target.offsetTop);\r\n            }\r\n          }\r\n        };\r\n      }],\r\n      link: function(scope, element) {\r\n        if (overthrow.support !== 'native') {\r\n          element.addClass('overthrow');\r\n          overthrow.forget();\r\n          overthrow.set();\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  angular.forEach(['input', 'textarea'], function(directiveName) {\r\n    module.directive(directiveName, ['$rootScope','$timeout', function($rootScope, $timeout) {\r\n      return {\r\n        require: '?^^scrollableContent',\r\n        link: function(scope, elem, attrs, scrollable) {\r\n          // Workaround to avoid soft keyboard hiding inputs\r\n          elem.on('focus', function(){\r\n            if (scrollable && scrollable.scrollableContent) {\r\n              var h1 = scrollable.scrollableContent.offsetHeight;\r\n              $timeout(function() {\r\n                var h2 = scrollable.scrollableContent.offsetHeight;\r\n                // \r\n                // if scrollableContent height is reduced in half second\r\n                // since an input got focus we assume soft keyboard is showing.\r\n                //\r\n                if (h1 > h2) {\r\n                  scrollable.scrollTo(elem, 10);  \r\n                }\r\n              }, 500);              \r\n            }\r\n          });\r\n        }\r\n      };\r\n    }]);\r\n  });\r\n\r\n  /**\r\n   * @directive uiScrollTop\r\n   * @restrict A\r\n   *\r\n   * @param {expression} uiScrollTop The expression to be evaluated when scroll \r\n   * reaches top of element.\r\n   */\r\n\r\n  /**\r\n   * @directive uiScrollBottom\r\n   * @restrict A\r\n   *\r\n   * @param {expression} uiScrollBottom The expression to be evaluated when scroll \r\n   * reaches bottom of element.\r\n   */\r\n  angular.forEach(\r\n    {\r\n      uiScrollTop: function(elem){\r\n        return elem.scrollTop === 0;\r\n      }, \r\n      uiScrollBottom: function(elem){\r\n        return elem.scrollHeight === elem.scrollTop + elem.clientHeight;\r\n      }\r\n    }, \r\n    function(reached, directiveName){\r\n      module.directive(directiveName, [function() {\r\n        return {\r\n          restrict: 'A',\r\n          link: function(scope, elem, attrs) {\r\n            elem.on('scroll', function(){\r\n              /* If reached bottom */\r\n              if ( reached(elem[0]) ) {\r\n                /* Do what is specified by onScrollBottom */\r\n                scope.$apply(function(){\r\n                  scope.$eval(attrs[directiveName]);\r\n                });\r\n              }\r\n            });\r\n          }\r\n        };\r\n      }]);\r\n    });\r\n\r\n  /**\r\n   * @directive uiScrollableHeader\r\n   * @restrict C\r\n   */\r\n\r\n  /**\r\n   * @directive uiScrollableFooter\r\n   * @restrict C\r\n   */\r\n  angular.forEach({Top: 'scrollableHeader', Bottom: 'scrollableFooter'}, \r\n    function(directiveName, side) {\r\n        module.directive(directiveName, [\r\n          '$window',\r\n          function($window) {\r\n                  return {\r\n                    restrict: 'C',\r\n                    link: function(scope, element) {\r\n                      var el = element[0],\r\n                          parentStyle = element.parent()[0].style;\r\n\r\n                      var adjustParentPadding = function() {\r\n                        var styles = $window.getComputedStyle(el),\r\n                            margin = parseInt(styles.marginTop, 10) + parseInt(styles.marginBottom, 10);\r\n                        parentStyle['padding' + side] = el.offsetHeight + margin + 'px';\r\n                      };\r\n\r\n                      var interval = setInterval(adjustParentPadding, 30);\r\n\r\n                      element.on('$destroy', function(){\r\n                        parentStyle['padding' + side] = null;\r\n                        clearInterval(interval);\r\n                        interval = adjustParentPadding = element = null;\r\n                      });\r\n                    }\r\n                  };\r\n                }\r\n        ]);\r\n    });\r\n}());","/**\r\n@module mobile-angular-ui.components.sidebars\r\n\r\n@description\r\n\r\nSidebars can be placed either in left side or right side adding respectively `.sidebar-left` and `.sidebar-right` classes.\r\n\r\n``` html\r\n<div class=\"sidebar sidebar-left\">\r\n  <div class=\"scrollable\">\r\n    <h1 class=\"scrollable-header app-name\">My App</h1>  \r\n    <div class=\"scrollable-content\">\r\n      <div class=\"list-group\" ui-turn-off='uiSidebarLeft'>\r\n        <a class=\"list-group-item\" href=\"#/link1\">Link 1 \r\n          <i class=\"fa fa-chevron-right pull-right\"></i></a>\r\n        <a class=\"list-group-item\" href=\"#/link2\">Link 2\r\n          <i class=\"fa fa-chevron-right pull-right\"></i></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"sidebar sidebar-rigth\">\r\n  <!-- -->\r\n</div>\r\n```\r\n\r\n#### Interacting with sidebars\r\n\r\nUnder the hood sidebar uses `SharedState` exposing respective statuses: `uiSidebarLeft` and `uiSidebarRight` unless you define different state name through `id` attribute on sidebar elements.\r\n\r\n``` html\r\n<a href ui-toggle='uiSidebarLeft'>Toggle sidebar left</a>\r\n\r\n<a href ui-toggle='uiSidebarRight'>Toggle sidebar right</a>\r\n```\r\n\r\nYou can put `ui-turn-off='uiSidebarLeft'` or `ui-turn-off='uiSidebarLeft'` inside the sidebar to make it close after clicking links inside them.\r\n\r\nBy default sidebar are closed by clicking/tapping outside them.\r\n\r\n*/\r\n(function() {\r\n  'use strict';\r\n\r\n  var module = angular.module(\r\n    'mobile-angular-ui.components.sidebars', [\r\n      'mobile-angular-ui.core.sharedState',\r\n      'mobile-angular-ui.core.outerClick'\r\n    ]\r\n  );\r\n\r\n  angular.forEach(['left', 'right'], function (side) {\r\n    var directiveName = 'sidebar' + side.charAt(0).toUpperCase() + side.slice(1);\r\n    var stateName = 'ui' + directiveName.charAt(0).toUpperCase() + directiveName.slice(1);\r\n\r\n    module.directive(directiveName, [\r\n      '$rootElement',\r\n      'SharedState',\r\n      'bindOuterClick',\r\n      '$location',\r\n      function (\r\n        $rootElement,\r\n        SharedState,\r\n        bindOuterClick,\r\n        $location\r\n      ) {  \r\n        return {\r\n          restrict: 'C',\r\n          link: function (scope, elem, attrs) {\r\n            var parentClass = 'has-sidebar-' + side;\r\n            var visibleClass = 'sidebar-' + side + '-visible';\r\n            var activeClass = 'sidebar-' + side + '-in';\r\n\r\n            if (attrs.id) {\r\n              stateName = attrs.id;\r\n            }\r\n\r\n            var outerClickCb = function (){\r\n              SharedState.turnOff(stateName);\r\n            };\r\n\r\n            var outerClickIf = function() {\r\n              return SharedState.isActive(stateName);\r\n            };\r\n\r\n            $rootElement.addClass(parentClass);\r\n            scope.$on('$destroy', function () {\r\n              $rootElement\r\n                .removeClass(parentClass);\r\n              $rootElement\r\n                .removeClass(visibleClass);\r\n              $rootElement\r\n                .removeClass(activeClass);\r\n            });\r\n\r\n            var defaultActive = attrs.active !== undefined && attrs.active !== 'false';          \r\n            SharedState.initialize(scope, stateName, {defaultValue: defaultActive});\r\n\r\n            scope.$on('mobile-angular-ui.state.changed.' + stateName, function (e, active) {\r\n              if (attrs.uiTrackAsSearchParam === '' || attrs.uiTrackAsSearchParam) {\r\n                $location.search(stateName, active || null);\r\n              }\r\n              \r\n              if (active) {\r\n                $rootElement\r\n                  .addClass(visibleClass);\r\n                $rootElement\r\n                  .addClass(activeClass);\r\n              } else {\r\n                $rootElement\r\n                  .removeClass(activeClass);\r\n                // Note: .removeClass(visibleClass) is called on 'mobile-angular-ui.app.transitionend'\r\n              }\r\n            });\r\n\r\n            scope.$on('$routeChangeSuccess', function() {\r\n              SharedState.turnOff(stateName);\r\n            });\r\n\r\n            scope.$on('$routeUpdate', function() {\r\n              if (attrs.uiTrackAsSearchParam) {\r\n                if (($location.search())[stateName]) {\r\n                  SharedState.turnOn(stateName);\r\n                } else {\r\n                  SharedState.turnOff(stateName);\r\n                }                \r\n              }\r\n            });\r\n\r\n            scope.$on('mobile-angular-ui.app.transitionend', function() {\r\n              if (!SharedState.isActive(stateName)) {\r\n                $rootElement.removeClass(visibleClass);  \r\n              }\r\n            });\r\n\r\n            if (attrs.closeOnOuterClicks !== 'false') {\r\n              bindOuterClick(scope, elem, outerClickCb, outerClickIf);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    ]);\r\n  });\r\n\r\n  module.directive('app', ['$rootScope', function($rootScope) {\r\n    return {\r\n      restrict: 'C',\r\n      link: function(scope, element) {\r\n        \r\n        element.on('transitionend webkitTransitionEnd oTransitionEnd otransitionend', function() {\r\n          $rootScope.$broadcast('mobile-angular-ui.app.transitionend');\r\n        });          \r\n\r\n      }\r\n    };\r\n  }]);\r\n}());","/**\r\n@module mobile-angular-ui.components.switch\r\n@description\r\n\r\nThe `ui-switch` directive (not to be confused with `ng-switch`) lets you create a toggle switch control bound to a boolean `ngModel` value.\r\n\r\n<figure class=\"full-width-figure\">\r\n  <img src=\"/assets/img/figs/switch.png\" alt=\"\"/>\r\n</figure>\r\n\r\nIt requires `ngModel`. You can also use `ngChange` in conjunction with `[switch]` to trigger functions in response to model changes.\r\n\r\n``` html\r\n<ui-switch  ng-model=\"invoice.paid\"></ui-switch>\r\n```\r\n\r\n*/\r\n(function() {\r\n  'use strict';  \r\n  angular.module('mobile-angular-ui.components.switch', [])\r\n  .directive(\"uiSwitch\", function() {\r\n    return {\r\n      restrict: \"EA\",\r\n      replace: true,\r\n      scope: {\r\n        model: \"=ngModel\",\r\n        changeExpr: \"@ngChange\",\r\n        disabled: \"@\"\r\n      },\r\n      template: \"<div class='switch' ng-class='{active: model}'><div class='switch-handle'></div></div>\",\r\n      link: function(scope, elem, attrs) {\r\n\r\n        elem.on('click tap', function(){\r\n          if (attrs.disabled === null || attrs.disabled === undefined) {\r\n            scope.model = !scope.model;\r\n            scope.$apply();\r\n\r\n            if (scope.changeExpr !== null && scope.changeExpr !== undefined) {\r\n              scope.$parent.$eval(scope.changeExpr);\r\n            }\r\n          }\r\n        });\r\n\r\n        elem.addClass('switch-transition-enabled');\r\n      }\r\n    };\r\n  });\r\n}());","/**\r\n@module mobile-angular-ui.components\r\n\r\n@description\r\n\r\nIt has directives and services providing mobile friendly \r\ncomponents like navbars and sidebars. \r\nIt requires `mobile-angular-ui.base.css` \r\nin order to work properly.\r\n\r\n## Standalone Usage\r\n\r\nAlthough `.components` module is required by `mobile-angular-ui` by default \r\nyou can use it alone. Some submodules requires `mobile-angular-ui.core` to work,\r\nso be sure its sources are available.\r\n\r\n``` js\r\nangular.module('myApp', ['mobile-angular-ui.components']);\r\n```\r\n\r\n*/\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('mobile-angular-ui.components', [\r\n    'mobile-angular-ui.components.modals',\r\n    'mobile-angular-ui.components.navbars',\r\n    'mobile-angular-ui.components.sidebars',\r\n    'mobile-angular-ui.components.scrollable',\r\n    'mobile-angular-ui.components.switch'\r\n  ]);\r\n}());","/**\r\n@module mobile-angular-ui\r\n@position 0\r\n@description\r\n\r\nThis is the main angular module of `mobile-angular-ui` framework.\r\n\r\nBy requiring this module you will have all `mobile-angular-ui.core`\r\nand `mobile-angular-ui.components` features required as well. \r\n\r\n## Usage\r\n\r\nDeclare it as a dependency for your application:\r\n\r\n``` js\r\nangular.module('myApp', ['mobile-angular-ui']);\r\n```\r\n\r\n*/\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('mobile-angular-ui', [\r\n    'mobile-angular-ui.core',\r\n    'mobile-angular-ui.components'\r\n  ]);\r\n\r\n}());"],"sourceRoot":"/source/"}